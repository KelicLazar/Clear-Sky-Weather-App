{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\MY REACT PROJECTS\\\\Cool Weather App\\\\weather-app\\\\src\\\\context\\\\place-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PlacesContext = /*#__PURE__*/React.createContext({\n  addedCities: [\"London\"],\n  placesData: [],\n  availableCitiesInSelectedCountry: [],\n  countryIsSelected: false,\n  cityIsSelected: false,\n  handleCityIsSelected: () => {},\n  getPlaces: () => {},\n  getCitiesOfSelectedCountry: () => {},\n  addCity: () => {},\n  removeCity: () => {}\n});\n\nconst PlacesContextProvider = props => {\n  _s();\n\n  const [places, setPlaces] = useState([]);\n  const [availableCities, setAvailableCities] = useState([]);\n  const [isSelected, setIsSelected] = useState({\n    country: false,\n    city: false\n  });\n\n  const getPlacesHandler = async () => {\n    const response = await fetch(\"https://countriesnow.space/api/v0.1/countries\");\n    const places = await response.json();\n    setPlaces(places.data);\n  };\n\n  const getCitiesOfSelectedCountryHandler = country => {\n    const selectedCountry = places.find(element => element.country === country);\n    setIsSelected(prevValue => ({ ...prevValue,\n      country: true\n    }));\n    setAvailableCities(selectedCountry.cities);\n  };\n\n  const cityIsSelectedHandler = () => {\n    setIsSelected(prevValue => ({ ...prevValue,\n      city: true\n    }));\n  };\n\n  const addCityHandler = () => {};\n\n  const removeCityHandler = () => {};\n\n  return /*#__PURE__*/_jsxDEV(PlacesContext.Provider, {\n    value: {\n      addedCities: [\"London\"],\n      placesData: places,\n      availableCitiesInSelectedCountry: availableCities,\n      countryIsSelected: isSelected.country,\n      cityIsSelected: isSelected.city,\n      handleCityIsSelected: cityIsSelectedHandler,\n      getPlaces: getPlacesHandler,\n      getCitiesOfSelectedCountry: getCitiesOfSelectedCountryHandler,\n      addCity: addCityHandler,\n      removeCity: removeCityHandler\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PlacesContextProvider, \"hzVo50djB2vHdAVpJnZdDFq4wvg=\");\n\n_c = PlacesContextProvider;\nexport default PlacesContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlacesContextProvider\");","map":{"version":3,"names":["React","useState","PlacesContext","createContext","addedCities","placesData","availableCitiesInSelectedCountry","countryIsSelected","cityIsSelected","handleCityIsSelected","getPlaces","getCitiesOfSelectedCountry","addCity","removeCity","PlacesContextProvider","props","places","setPlaces","availableCities","setAvailableCities","isSelected","setIsSelected","country","city","getPlacesHandler","response","fetch","json","data","getCitiesOfSelectedCountryHandler","selectedCountry","find","element","prevValue","cities","cityIsSelectedHandler","addCityHandler","removeCityHandler","children"],"sources":["C:/Users/PC/Desktop/MY REACT PROJECTS/Cool Weather App/weather-app/src/context/place-context.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport const PlacesContext = React.createContext({\r\n  addedCities: [\"London\"],\r\n  placesData: [],\r\n  availableCitiesInSelectedCountry: [],\r\n  countryIsSelected: false,\r\n  cityIsSelected: false,\r\n  handleCityIsSelected: () => {},\r\n  getPlaces: () => {},\r\n  getCitiesOfSelectedCountry: () => {},\r\n  addCity: () => {},\r\n  removeCity: () => {},\r\n});\r\n\r\nconst PlacesContextProvider = (props) => {\r\n  const [places, setPlaces] = useState([]);\r\n  const [availableCities, setAvailableCities] = useState([]);\r\n  const [isSelected, setIsSelected] = useState({ country: false, city: false });\r\n  const getPlacesHandler = async () => {\r\n    const response = await fetch(\r\n      \"https://countriesnow.space/api/v0.1/countries\"\r\n    );\r\n    const places = await response.json();\r\n    setPlaces(places.data);\r\n  };\r\n  const getCitiesOfSelectedCountryHandler = (country) => {\r\n    const selectedCountry = places.find(\r\n      (element) => element.country === country\r\n    );\r\n    setIsSelected((prevValue) => ({ ...prevValue, country: true }));\r\n    setAvailableCities(selectedCountry.cities);\r\n  };\r\n\r\n  const cityIsSelectedHandler = () => {\r\n    setIsSelected((prevValue) => ({ ...prevValue, city: true }));\r\n  };\r\n  const addCityHandler = () => {};\r\n  const removeCityHandler = () => {};\r\n\r\n  return (\r\n    <PlacesContext.Provider\r\n      value={{\r\n        addedCities: [\"London\"],\r\n        placesData: places,\r\n        availableCitiesInSelectedCountry: availableCities,\r\n        countryIsSelected: isSelected.country,\r\n        cityIsSelected: isSelected.city,\r\n        handleCityIsSelected: cityIsSelectedHandler,\r\n        getPlaces: getPlacesHandler,\r\n        getCitiesOfSelectedCountry: getCitiesOfSelectedCountryHandler,\r\n        addCity: addCityHandler,\r\n        removeCity: removeCityHandler,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </PlacesContext.Provider>\r\n  );\r\n};\r\n\r\nexport default PlacesContextProvider;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,OAAO,MAAMC,aAAa,gBAAGF,KAAK,CAACG,aAAN,CAAoB;EAC/CC,WAAW,EAAE,CAAC,QAAD,CADkC;EAE/CC,UAAU,EAAE,EAFmC;EAG/CC,gCAAgC,EAAE,EAHa;EAI/CC,iBAAiB,EAAE,KAJ4B;EAK/CC,cAAc,EAAE,KAL+B;EAM/CC,oBAAoB,EAAE,MAAM,CAAE,CANiB;EAO/CC,SAAS,EAAE,MAAM,CAAE,CAP4B;EAQ/CC,0BAA0B,EAAE,MAAM,CAAE,CARW;EAS/CC,OAAO,EAAE,MAAM,CAAE,CAT8B;EAU/CC,UAAU,EAAE,MAAM,CAAE;AAV2B,CAApB,CAAtB;;AAaP,MAAMC,qBAAqB,GAAIC,KAAD,IAAW;EAAA;;EACvC,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACiB,eAAD,EAAkBC,kBAAlB,IAAwClB,QAAQ,CAAC,EAAD,CAAtD;EACA,MAAM,CAACmB,UAAD,EAAaC,aAAb,IAA8BpB,QAAQ,CAAC;IAAEqB,OAAO,EAAE,KAAX;IAAkBC,IAAI,EAAE;EAAxB,CAAD,CAA5C;;EACA,MAAMC,gBAAgB,GAAG,YAAY;IACnC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,+CAD0B,CAA5B;IAGA,MAAMV,MAAM,GAAG,MAAMS,QAAQ,CAACE,IAAT,EAArB;IACAV,SAAS,CAACD,MAAM,CAACY,IAAR,CAAT;EACD,CAND;;EAOA,MAAMC,iCAAiC,GAAIP,OAAD,IAAa;IACrD,MAAMQ,eAAe,GAAGd,MAAM,CAACe,IAAP,CACrBC,OAAD,IAAaA,OAAO,CAACV,OAAR,KAAoBA,OADX,CAAxB;IAGAD,aAAa,CAAEY,SAAD,KAAgB,EAAE,GAAGA,SAAL;MAAgBX,OAAO,EAAE;IAAzB,CAAhB,CAAD,CAAb;IACAH,kBAAkB,CAACW,eAAe,CAACI,MAAjB,CAAlB;EACD,CAND;;EAQA,MAAMC,qBAAqB,GAAG,MAAM;IAClCd,aAAa,CAAEY,SAAD,KAAgB,EAAE,GAAGA,SAAL;MAAgBV,IAAI,EAAE;IAAtB,CAAhB,CAAD,CAAb;EACD,CAFD;;EAGA,MAAMa,cAAc,GAAG,MAAM,CAAE,CAA/B;;EACA,MAAMC,iBAAiB,GAAG,MAAM,CAAE,CAAlC;;EAEA,oBACE,QAAC,aAAD,CAAe,QAAf;IACE,KAAK,EAAE;MACLjC,WAAW,EAAE,CAAC,QAAD,CADR;MAELC,UAAU,EAAEW,MAFP;MAGLV,gCAAgC,EAAEY,eAH7B;MAILX,iBAAiB,EAAEa,UAAU,CAACE,OAJzB;MAKLd,cAAc,EAAEY,UAAU,CAACG,IALtB;MAMLd,oBAAoB,EAAE0B,qBANjB;MAOLzB,SAAS,EAAEc,gBAPN;MAQLb,0BAA0B,EAAEkB,iCARvB;MASLjB,OAAO,EAAEwB,cATJ;MAULvB,UAAU,EAAEwB;IAVP,CADT;IAAA,UAcGtB,KAAK,CAACuB;EAdT;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CA3CD;;GAAMxB,qB;;KAAAA,qB;AA6CN,eAAeA,qBAAf"},"metadata":{},"sourceType":"module"}