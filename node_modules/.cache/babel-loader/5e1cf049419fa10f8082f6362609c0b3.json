{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\MY REACT PROJECTS\\\\Cool Weather App\\\\weather-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport AddCity from \"./components/AddCity\";\nimport CitiesList from \"./components/CitiesList\";\nimport { PlacesContext } from \"./context/place-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [lat, setLat] = useState(\"\");\n  const [long, setLong] = useState(\"\");\n  const [data, setData] = useState([]);\n  const placesCtx = useContext(PlacesContext);\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      setLat(position.coords.latitude);\n      setLong(position.coords.longitude);\n    });\n  }, []);\n\n  const getLocation = async () => {\n    const address = `https://api.openweathermap.org/data/2.5/weather?id=${placesCtx.favoritePlaces[0]}&appid=${process.env.REACT_APP_API_KEY}`;\n    const response = await fetch(address);\n    const data = await response.json();\n    setData(data);\n    console.log(data);\n    console.log(data.weather[0].description);\n    console.log(data.weather[0].main);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AddCity, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CitiesList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getLocation,\n      children: \"fetch all countries and cities\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"DaEeQQkcyAsB58TudVLcQjLGGOI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useContext","useEffect","useState","AddCity","CitiesList","PlacesContext","App","lat","setLat","long","setLong","data","setData","placesCtx","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","getLocation","address","favoritePlaces","process","env","REACT_APP_API_KEY","response","fetch","json","console","log","weather","description","main"],"sources":["C:/Users/PC/Desktop/MY REACT PROJECTS/Cool Weather App/weather-app/src/App.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport AddCity from \"./components/AddCity\";\nimport CitiesList from \"./components/CitiesList\";\nimport { PlacesContext } from \"./context/place-context\";\n\nfunction App() {\n  const [lat, setLat] = useState(\"\");\n  const [long, setLong] = useState(\"\");\n  const [data, setData] = useState([]);\n  const placesCtx = useContext(PlacesContext);\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((position) => {\n      setLat(position.coords.latitude);\n      setLong(position.coords.longitude);\n    });\n  }, []);\n\n  const getLocation = async () => {\n    const address = `https://api.openweathermap.org/data/2.5/weather?id=${placesCtx.favoritePlaces[0]}&appid=${process.env.REACT_APP_API_KEY}`;\n\n    const response = await fetch(address);\n    const data = await response.json();\n    setData(data);\n    console.log(data);\n    console.log(data.weather[0].description);\n    console.log(data.weather[0].main);\n  };\n\n  return (\n    <React.Fragment>\n      <AddCity></AddCity>\n      <CitiesList></CitiesList>\n\n      {/* <p>{data.weather.main}</p> */}\n      <h2></h2>\n\n      <button onClick={getLocation}>fetch all countries and cities</button>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAASC,aAAT,QAA8B,yBAA9B;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBN,QAAQ,CAAC,EAAD,CAA9B;EACA,MAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAMW,SAAS,GAAGb,UAAU,CAACK,aAAD,CAA5B;EAEAJ,SAAS,CAAC,MAAM;IACda,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,QAAD,IAAc;MACrDT,MAAM,CAACS,QAAQ,CAACC,MAAT,CAAgBC,QAAjB,CAAN;MACAT,OAAO,CAACO,QAAQ,CAACC,MAAT,CAAgBE,SAAjB,CAAP;IACD,CAHD;EAID,CALQ,EAKN,EALM,CAAT;;EAOA,MAAMC,WAAW,GAAG,YAAY;IAC9B,MAAMC,OAAO,GAAI,sDAAqDT,SAAS,CAACU,cAAV,CAAyB,CAAzB,CAA4B,UAASC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,EAAzI;IAEA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACN,OAAD,CAA5B;IACA,MAAMX,IAAI,GAAG,MAAMgB,QAAQ,CAACE,IAAT,EAAnB;IACAjB,OAAO,CAACD,IAAD,CAAP;IACAmB,OAAO,CAACC,GAAR,CAAYpB,IAAZ;IACAmB,OAAO,CAACC,GAAR,CAAYpB,IAAI,CAACqB,OAAL,CAAa,CAAb,EAAgBC,WAA5B;IACAH,OAAO,CAACC,GAAR,CAAYpB,IAAI,CAACqB,OAAL,CAAa,CAAb,EAAgBE,IAA5B;EACD,CATD;;EAWA,oBACE,QAAC,KAAD,CAAO,QAAP;IAAA,wBACE,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,UAAD;MAAA;MAAA;MAAA;IAAA,QAFF,eAKE;MAAA;MAAA;MAAA;IAAA,QALF,eAOE;MAAQ,OAAO,EAAEb,WAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAPF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAWD;;GAnCQf,G;;KAAAA,G;AAqCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}