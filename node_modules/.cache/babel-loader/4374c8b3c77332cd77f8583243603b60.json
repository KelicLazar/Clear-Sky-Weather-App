{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\MY REACT PROJECTS\\\\Cool Weather App\\\\weather-app\\\\src\\\\context\\\\place-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PlacesContext = /*#__PURE__*/React.createContext({\n  favoritePlaces: [],\n  addFavoritePlace: () => {},\n  removeFavoritePlace: () => {}\n});\n\nconst PlacesContextProvider = props => {\n  _s();\n\n  const [favPlaces, setFavPlaces] = useState([{\n    cityName: \"Sombor\",\n    lat: 45.7742,\n    long: 19.1122\n  }]);\n  const [error, setError] = useState(null);\n  console.log(\"loaded ctxprovider\");\n\n  const addFavoritePlaceHandler = async city => {\n    const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${process.env.REACT_APP_API_KEY}`);\n\n    if (!response.ok) {\n      console.error(\"There is no info about that city\");\n      setError(\"There is no info about that city\");\n      setTimeout(() => {\n        setError(null);\n      }, 2);\n      throw Error(response.statusText);\n    }\n\n    const data = await response.json();\n    console.log(data);\n    const fullCity = {\n      cityName: city,\n      lat: data.coord.lat,\n      long: data.coord.lon\n    };\n    console.log(fullCity);\n    setFavPlaces(prevValue => {\n      return [...prevValue, fullCity];\n    });\n  };\n\n  const removeFavoritePlaceHandler = () => {};\n\n  return /*#__PURE__*/_jsxDEV(PlacesContext.Provider, {\n    value: {\n      favoritePlaces: favPlaces,\n      addFavoritePlace: addFavoritePlaceHandler,\n      removeFavoritePlace: removeFavoritePlaceHandler\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PlacesContextProvider, \"EdaLfPd5PC6EATSoCgBefT00AtQ=\");\n\n_c = PlacesContextProvider;\nexport default PlacesContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlacesContextProvider\");","map":{"version":3,"names":["React","useState","PlacesContext","createContext","favoritePlaces","addFavoritePlace","removeFavoritePlace","PlacesContextProvider","props","favPlaces","setFavPlaces","cityName","lat","long","error","setError","console","log","addFavoritePlaceHandler","city","response","fetch","process","env","REACT_APP_API_KEY","ok","setTimeout","Error","statusText","data","json","fullCity","coord","lon","prevValue","removeFavoritePlaceHandler","children"],"sources":["C:/Users/PC/Desktop/MY REACT PROJECTS/Cool Weather App/weather-app/src/context/place-context.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport const PlacesContext = React.createContext({\r\n  favoritePlaces: [],\r\n  addFavoritePlace: () => {},\r\n  removeFavoritePlace: () => {},\r\n});\r\n\r\nconst PlacesContextProvider = (props) => {\r\n  const [favPlaces, setFavPlaces] = useState([\r\n    { cityName: \"Sombor\", lat: 45.7742, long: 19.1122 },\r\n  ]);\r\n  const [error, setError] = useState(null);\r\n  console.log(\"loaded ctxprovider\");\r\n\r\n  const addFavoritePlaceHandler = async (city) => {\r\n    const response = await fetch(\r\n      `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${process.env.REACT_APP_API_KEY}`\r\n    );\r\n    if (!response.ok) {\r\n      console.error(\"There is no info about that city\");\r\n      setError(\"There is no info about that city\");\r\n      setTimeout(() => {\r\n        setError(null);\r\n      }, 2);\r\n      throw Error(response.statusText);\r\n    }\r\n    const data = await response.json();\r\n    console.log(data);\r\n    const fullCity = {\r\n      cityName: city,\r\n      lat: data.coord.lat,\r\n      long: data.coord.lon,\r\n    };\r\n    console.log(fullCity);\r\n    setFavPlaces((prevValue) => {\r\n      return [...prevValue, fullCity];\r\n    });\r\n  };\r\n  const removeFavoritePlaceHandler = () => {};\r\n\r\n  return (\r\n    <PlacesContext.Provider\r\n      value={{\r\n        favoritePlaces: favPlaces,\r\n        addFavoritePlace: addFavoritePlaceHandler,\r\n        removeFavoritePlace: removeFavoritePlaceHandler,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </PlacesContext.Provider>\r\n  );\r\n};\r\n\r\nexport default PlacesContextProvider;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,OAAO,MAAMC,aAAa,gBAAGF,KAAK,CAACG,aAAN,CAAoB;EAC/CC,cAAc,EAAE,EAD+B;EAE/CC,gBAAgB,EAAE,MAAM,CAAE,CAFqB;EAG/CC,mBAAmB,EAAE,MAAM,CAAE;AAHkB,CAApB,CAAtB;;AAMP,MAAMC,qBAAqB,GAAIC,KAAD,IAAW;EAAA;;EACvC,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,CACzC;IAAEU,QAAQ,EAAE,QAAZ;IAAsBC,GAAG,EAAE,OAA3B;IAAoCC,IAAI,EAAE;EAA1C,CADyC,CAAD,CAA1C;EAGA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,IAAD,CAAlC;EACAe,OAAO,CAACC,GAAR,CAAY,oBAAZ;;EAEA,MAAMC,uBAAuB,GAAG,MAAOC,IAAP,IAAgB;IAC9C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,qDAAoDF,IAAK,UAASG,OAAO,CAACC,GAAR,CAAYC,iBAAkB,EADvE,CAA5B;;IAGA,IAAI,CAACJ,QAAQ,CAACK,EAAd,EAAkB;MAChBT,OAAO,CAACF,KAAR,CAAc,kCAAd;MACAC,QAAQ,CAAC,kCAAD,CAAR;MACAW,UAAU,CAAC,MAAM;QACfX,QAAQ,CAAC,IAAD,CAAR;MACD,CAFS,EAEP,CAFO,CAAV;MAGA,MAAMY,KAAK,CAACP,QAAQ,CAACQ,UAAV,CAAX;IACD;;IACD,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAT,EAAnB;IACAd,OAAO,CAACC,GAAR,CAAYY,IAAZ;IACA,MAAME,QAAQ,GAAG;MACfpB,QAAQ,EAAEQ,IADK;MAEfP,GAAG,EAAEiB,IAAI,CAACG,KAAL,CAAWpB,GAFD;MAGfC,IAAI,EAAEgB,IAAI,CAACG,KAAL,CAAWC;IAHF,CAAjB;IAKAjB,OAAO,CAACC,GAAR,CAAYc,QAAZ;IACArB,YAAY,CAAEwB,SAAD,IAAe;MAC1B,OAAO,CAAC,GAAGA,SAAJ,EAAeH,QAAf,CAAP;IACD,CAFW,CAAZ;EAGD,CAvBD;;EAwBA,MAAMI,0BAA0B,GAAG,MAAM,CAAE,CAA3C;;EAEA,oBACE,QAAC,aAAD,CAAe,QAAf;IACE,KAAK,EAAE;MACL/B,cAAc,EAAEK,SADX;MAELJ,gBAAgB,EAAEa,uBAFb;MAGLZ,mBAAmB,EAAE6B;IAHhB,CADT;IAAA,UAOG3B,KAAK,CAAC4B;EAPT;IAAA;IAAA;IAAA;EAAA,QADF;AAWD,CA5CD;;GAAM7B,qB;;KAAAA,qB;AA8CN,eAAeA,qBAAf"},"metadata":{},"sourceType":"module"}