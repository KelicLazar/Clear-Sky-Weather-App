{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\MY REACT PROJECTS\\\\Cool Weather App\\\\weather-app\\\\src\\\\components\\\\AddCityForm\\\\AddCity.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport { PlacesContext } from \"../../context/place-context\";\nimport classes from \"./AddCity.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddCity = props => {\n  _s();\n\n  const [places, setPlaces] = useState([]);\n  const [availableCitiesInSelectedCountry, setAvailableCitiesInSelectedCountry] = useState([]);\n  const [isSelected, setIsSelected] = useState({\n    country: false,\n    city: false\n  });\n  const [cityToAdd, setCityToAdd] = useState();\n  const countryRef = useRef();\n  const cityRef = useRef();\n  const cssClasses = [classes.container, props.show ? classes.FormOpen : classes.FormClosed];\n  const placesCtx = useContext(PlacesContext);\n\n  const getPlacesHandler = async () => {\n    const response = await fetch(\"https://countriesnow.space/api/v0.1/countries\");\n    const places = await response.json();\n    setPlaces(places.data);\n  };\n\n  useEffect(() => {\n    getPlacesHandler();\n  });\n\n  const selectedCountryHandler = event => {\n    // placesCtx.getCitiesOfSelectedCountry(event.target.value);\n    const selectedCountryIndex = places.findIndex(element => element.country === event.target.value);\n    setAvailableCitiesInSelectedCountry(places[selectedCountryIndex].cities);\n    setIsSelected(prevValue => ({ ...prevValue,\n      country: true\n    }));\n  };\n\n  const selectedCityHandler = event => {\n    setCityToAdd(event.target.value);\n    setIsSelected(prevValue => ({ ...prevValue,\n      city: true\n    }));\n  };\n\n  const addCityHandler = () => {\n    // placesCtx.addCity(cityToAdd);\n    placesCtx.addFavoritePlace(cityToAdd);\n    props.close();\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cssClasses.join(\" \"),\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        ref: countryRef,\n        onChange: selectedCountryHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          selected: true,\n          hidden: true,\n          value: null,\n          children: \"--Select Country--\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), places.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: item.country,\n            children: item.country\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        ref: cityRef,\n        onChange: selectedCityHandler,\n        disabled: !isSelected.country,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          selected: true,\n          hidden: true,\n          value: null,\n          children: \"--Select City--\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), availableCitiesInSelectedCountry.map((city, index) => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: city,\n            children: city\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addCityHandler,\n        disabled: !isSelected.country || !isSelected.city,\n        children: \"Add City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: props.close,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), placesCtx.favoritePlaces.map((city, index) => {\n        return /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: city.cityName\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 18\n        }, this);\n      }), placesCtx.error && /*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          color: \"red\"\n        },\n        children: placesCtx.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddCity, \"g6YKKwO8bOWc+S6Fh3M8n7yArds=\");\n\n_c = AddCity;\nexport default AddCity;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCity\");","map":{"version":3,"names":["React","useContext","useEffect","useRef","useState","PlacesContext","classes","AddCity","props","places","setPlaces","availableCitiesInSelectedCountry","setAvailableCitiesInSelectedCountry","isSelected","setIsSelected","country","city","cityToAdd","setCityToAdd","countryRef","cityRef","cssClasses","container","show","FormOpen","FormClosed","placesCtx","getPlacesHandler","response","fetch","json","data","selectedCountryHandler","event","selectedCountryIndex","findIndex","element","target","value","cities","prevValue","selectedCityHandler","addCityHandler","addFavoritePlace","close","join","map","item","index","favoritePlaces","cityName","error","color"],"sources":["C:/Users/PC/Desktop/MY REACT PROJECTS/Cool Weather App/weather-app/src/components/AddCityForm/AddCity.js"],"sourcesContent":["import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { PlacesContext } from \"../../context/place-context\";\r\n\r\nimport classes from \"./AddCity.module.css\";\r\n\r\nconst AddCity = (props) => {\r\n  const [places, setPlaces] = useState([]);\r\n  const [\r\n    availableCitiesInSelectedCountry,\r\n    setAvailableCitiesInSelectedCountry,\r\n  ] = useState([]);\r\n  const [isSelected, setIsSelected] = useState({ country: false, city: false });\r\n  const [cityToAdd, setCityToAdd] = useState();\r\n  const countryRef = useRef();\r\n  const cityRef = useRef();\r\n\r\n  const cssClasses = [\r\n    classes.container,\r\n    props.show ? classes.FormOpen : classes.FormClosed,\r\n  ];\r\n\r\n  const placesCtx = useContext(PlacesContext);\r\n\r\n  const getPlacesHandler = async () => {\r\n    const response = await fetch(\r\n      \"https://countriesnow.space/api/v0.1/countries\"\r\n    );\r\n    const places = await response.json();\r\n    setPlaces(places.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPlacesHandler();\r\n  });\r\n  const selectedCountryHandler = (event) => {\r\n    // placesCtx.getCitiesOfSelectedCountry(event.target.value);\r\n    const selectedCountryIndex = places.findIndex(\r\n      (element) => element.country === event.target.value\r\n    );\r\n    setAvailableCitiesInSelectedCountry(places[selectedCountryIndex].cities);\r\n    setIsSelected((prevValue) => ({ ...prevValue, country: true }));\r\n  };\r\n  const selectedCityHandler = (event) => {\r\n    setCityToAdd(event.target.value);\r\n    setIsSelected((prevValue) => ({ ...prevValue, city: true }));\r\n  };\r\n\r\n  const addCityHandler = () => {\r\n    // placesCtx.addCity(cityToAdd);\r\n\r\n    placesCtx.addFavoritePlace(cityToAdd);\r\n    props.close();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={cssClasses.join(\" \")}>\r\n        <select ref={countryRef} onChange={selectedCountryHandler}>\r\n          <option disabled selected hidden value={null}>\r\n            --Select Country--\r\n          </option>\r\n          {places.map((item, index) => {\r\n            return (\r\n              <option key={index} value={item.country}>\r\n                {item.country}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n\r\n        <select\r\n          ref={cityRef}\r\n          onChange={selectedCityHandler}\r\n          disabled={!isSelected.country}\r\n        >\r\n          <option disabled selected hidden value={null}>\r\n            --Select City--\r\n          </option>\r\n          {availableCitiesInSelectedCountry.map((city, index) => {\r\n            return (\r\n              <option key={index} value={city}>\r\n                {city}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n        <button\r\n          onClick={addCityHandler}\r\n          disabled={!isSelected.country || !isSelected.city}\r\n        >\r\n          Add City\r\n        </button>\r\n        <button onClick={props.close}>Close</button>\r\n        {placesCtx.favoritePlaces.map((city, index) => {\r\n          return <h2 key={index}>{city.cityName}</h2>;\r\n        })}\r\n        {placesCtx.error && <h4 style={{ color: \"red\" }}>{placesCtx.error}</h4>}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AddCity;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,MAAvC,EAA+CC,QAA/C,QAA+D,OAA/D;AACA,SAASC,aAAT,QAA8B,6BAA9B;AAEA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;EAAA;;EACzB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CACJO,gCADI,EAEJC,mCAFI,IAGFR,QAAQ,CAAC,EAAD,CAHZ;EAIA,MAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC;IAAEW,OAAO,EAAE,KAAX;IAAkBC,IAAI,EAAE;EAAxB,CAAD,CAA5C;EACA,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,EAA1C;EACA,MAAMe,UAAU,GAAGhB,MAAM,EAAzB;EACA,MAAMiB,OAAO,GAAGjB,MAAM,EAAtB;EAEA,MAAMkB,UAAU,GAAG,CACjBf,OAAO,CAACgB,SADS,EAEjBd,KAAK,CAACe,IAAN,GAAajB,OAAO,CAACkB,QAArB,GAAgClB,OAAO,CAACmB,UAFvB,CAAnB;EAKA,MAAMC,SAAS,GAAGzB,UAAU,CAACI,aAAD,CAA5B;;EAEA,MAAMsB,gBAAgB,GAAG,YAAY;IACnC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,+CAD0B,CAA5B;IAGA,MAAMpB,MAAM,GAAG,MAAMmB,QAAQ,CAACE,IAAT,EAArB;IACApB,SAAS,CAACD,MAAM,CAACsB,IAAR,CAAT;EACD,CAND;;EAQA7B,SAAS,CAAC,MAAM;IACdyB,gBAAgB;EACjB,CAFQ,CAAT;;EAGA,MAAMK,sBAAsB,GAAIC,KAAD,IAAW;IACxC;IACA,MAAMC,oBAAoB,GAAGzB,MAAM,CAAC0B,SAAP,CAC1BC,OAAD,IAAaA,OAAO,CAACrB,OAAR,KAAoBkB,KAAK,CAACI,MAAN,CAAaC,KADnB,CAA7B;IAGA1B,mCAAmC,CAACH,MAAM,CAACyB,oBAAD,CAAN,CAA6BK,MAA9B,CAAnC;IACAzB,aAAa,CAAE0B,SAAD,KAAgB,EAAE,GAAGA,SAAL;MAAgBzB,OAAO,EAAE;IAAzB,CAAhB,CAAD,CAAb;EACD,CAPD;;EAQA,MAAM0B,mBAAmB,GAAIR,KAAD,IAAW;IACrCf,YAAY,CAACe,KAAK,CAACI,MAAN,CAAaC,KAAd,CAAZ;IACAxB,aAAa,CAAE0B,SAAD,KAAgB,EAAE,GAAGA,SAAL;MAAgBxB,IAAI,EAAE;IAAtB,CAAhB,CAAD,CAAb;EACD,CAHD;;EAKA,MAAM0B,cAAc,GAAG,MAAM;IAC3B;IAEAhB,SAAS,CAACiB,gBAAV,CAA2B1B,SAA3B;IACAT,KAAK,CAACoC,KAAN;EACD,CALD;;EAOA,oBACE,QAAC,KAAD,CAAO,QAAP;IAAA,uBACE;MAAK,SAAS,EAAEvB,UAAU,CAACwB,IAAX,CAAgB,GAAhB,CAAhB;MAAA,wBACE;QAAQ,GAAG,EAAE1B,UAAb;QAAyB,QAAQ,EAAEa,sBAAnC;QAAA,wBACE;UAAQ,QAAQ,MAAhB;UAAiB,QAAQ,MAAzB;UAA0B,MAAM,MAAhC;UAAiC,KAAK,EAAE,IAAxC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,EAIGvB,MAAM,CAACqC,GAAP,CAAW,CAACC,IAAD,EAAOC,KAAP,KAAiB;UAC3B,oBACE;YAAoB,KAAK,EAAED,IAAI,CAAChC,OAAhC;YAAA,UACGgC,IAAI,CAAChC;UADR,GAAaiC,KAAb;YAAA;YAAA;YAAA;UAAA,QADF;QAKD,CANA,CAJH;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAcE;QACE,GAAG,EAAE5B,OADP;QAEE,QAAQ,EAAEqB,mBAFZ;QAGE,QAAQ,EAAE,CAAC5B,UAAU,CAACE,OAHxB;QAAA,wBAKE;UAAQ,QAAQ,MAAhB;UAAiB,QAAQ,MAAzB;UAA0B,MAAM,MAAhC;UAAiC,KAAK,EAAE,IAAxC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QALF,EAQGJ,gCAAgC,CAACmC,GAAjC,CAAqC,CAAC9B,IAAD,EAAOgC,KAAP,KAAiB;UACrD,oBACE;YAAoB,KAAK,EAAEhC,IAA3B;YAAA,UACGA;UADH,GAAagC,KAAb;YAAA;YAAA;YAAA;UAAA,QADF;QAKD,CANA,CARH;MAAA;QAAA;QAAA;QAAA;MAAA,QAdF,eA8BE;QACE,OAAO,EAAEN,cADX;QAEE,QAAQ,EAAE,CAAC7B,UAAU,CAACE,OAAZ,IAAuB,CAACF,UAAU,CAACG,IAF/C;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QA9BF,eAoCE;QAAQ,OAAO,EAAER,KAAK,CAACoC,KAAvB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QApCF,EAqCGlB,SAAS,CAACuB,cAAV,CAAyBH,GAAzB,CAA6B,CAAC9B,IAAD,EAAOgC,KAAP,KAAiB;QAC7C,oBAAO;UAAA,UAAiBhC,IAAI,CAACkC;QAAtB,GAASF,KAAT;UAAA;UAAA;UAAA;QAAA,QAAP;MACD,CAFA,CArCH,EAwCGtB,SAAS,CAACyB,KAAV,iBAAmB;QAAI,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAT,CAAX;QAAA,UAA8B1B,SAAS,CAACyB;MAAxC;QAAA;QAAA;QAAA;MAAA,QAxCtB;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA8CD,CA/FD;;GAAM5C,O;;KAAAA,O;AAiGN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}