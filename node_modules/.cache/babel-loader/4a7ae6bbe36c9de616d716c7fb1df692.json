{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\MY REACT PROJECTS\\\\Cool Weather App\\\\weather-app\\\\src\\\\context\\\\place-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PlacesContext = /*#__PURE__*/React.createContext({\n  favoritePlaces: [],\n  error: null,\n  cityWeatherInfo: [],\n  addFavoritePlace: () => {},\n  removeFavoritePlace: () => {}\n});\n\nconst PlacesContextProvider = props => {\n  _s();\n\n  const [favPlaces, setFavPlaces] = useState([]);\n  const [cityWeatherInfo, setCityWeatherInfo] = useState([]);\n  const [error, setError] = useState(null);\n  console.log(\"loaded ctxprovider\");\n\n  const addFavoritePlaceHandler = async city => {\n    if (favPlaces.some(e => e.cityName === city)) {\n      return;\n    }\n\n    const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${process.env.REACT_APP_API_KEY}`);\n\n    if (!response.ok) {\n      console.error(\"There is no info about that city\");\n      setError(\"There is no info about \" + city);\n      setTimeout(() => {\n        setError(null);\n      }, 2000);\n      throw Error(response.statusText);\n    }\n\n    const data = await response.json();\n    console.log(data);\n    const fullCity = {\n      cityName: city,\n      lat: data.coord.lat,\n      long: data.coord.lon\n    };\n    const getWeatherData = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${fullCity.lat}&lon=${fullCity.long}&units=metric&exclude=hourly,minutely&appid=${process.env.REACT_APP_API_KEY}`);\n    const weatherData = await getWeatherData.json();\n    console.log(\"This is weather data\", weatherData);\n    console.log(weatherData.daily[0].temp.day);\n    console.log(fullCity);\n    setFavPlaces(prevValue => {\n      return [...prevValue, fullCity];\n    });\n    setCityWeatherInfo(prevValue => {\n      return [...prevValue, weatherData];\n    });\n  };\n\n  const removeFavoritePlaceHandler = () => {};\n\n  return /*#__PURE__*/_jsxDEV(PlacesContext.Provider, {\n    value: {\n      favoritePlaces: favPlaces,\n      error: error,\n      cityWeatherInfo: cityWeatherInfo,\n      addFavoritePlace: addFavoritePlaceHandler,\n      removeFavoritePlace: removeFavoritePlaceHandler\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PlacesContextProvider, \"F4jgbPXhYehQUbKHMjVmYSenLMo=\");\n\n_c = PlacesContextProvider;\nexport default PlacesContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlacesContextProvider\");","map":{"version":3,"names":["React","useState","PlacesContext","createContext","favoritePlaces","error","cityWeatherInfo","addFavoritePlace","removeFavoritePlace","PlacesContextProvider","props","favPlaces","setFavPlaces","setCityWeatherInfo","setError","console","log","addFavoritePlaceHandler","city","some","e","cityName","response","fetch","process","env","REACT_APP_API_KEY","ok","setTimeout","Error","statusText","data","json","fullCity","lat","coord","long","lon","getWeatherData","weatherData","daily","temp","day","prevValue","removeFavoritePlaceHandler","children"],"sources":["C:/Users/PC/Desktop/MY REACT PROJECTS/Cool Weather App/weather-app/src/context/place-context.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport const PlacesContext = React.createContext({\r\n  favoritePlaces: [],\r\n  error: null,\r\n  cityWeatherInfo: [],\r\n  addFavoritePlace: () => {},\r\n  removeFavoritePlace: () => {},\r\n});\r\n\r\nconst PlacesContextProvider = (props) => {\r\n  const [favPlaces, setFavPlaces] = useState([]);\r\n  const [cityWeatherInfo, setCityWeatherInfo] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  console.log(\"loaded ctxprovider\");\r\n\r\n  const addFavoritePlaceHandler = async (city) => {\r\n    if (favPlaces.some((e) => e.cityName === city)) {\r\n      return;\r\n    }\r\n    const response = await fetch(\r\n      `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${process.env.REACT_APP_API_KEY}`\r\n    );\r\n    if (!response.ok) {\r\n      console.error(\"There is no info about that city\");\r\n      setError(\"There is no info about \" + city);\r\n      setTimeout(() => {\r\n        setError(null);\r\n      }, 2000);\r\n      throw Error(response.statusText);\r\n    }\r\n    const data = await response.json();\r\n    console.log(data);\r\n    const fullCity = {\r\n      cityName: city,\r\n      lat: data.coord.lat,\r\n      long: data.coord.lon,\r\n    };\r\n    const getWeatherData = await fetch(\r\n      `https://api.openweathermap.org/data/2.5/onecall?lat=${fullCity.lat}&lon=${fullCity.long}&units=metric&exclude=hourly,minutely&appid=${process.env.REACT_APP_API_KEY}`\r\n    );\r\n    const weatherData = await getWeatherData.json();\r\n    console.log(\"This is weather data\", weatherData);\r\n    console.log(weatherData.daily[0].temp.day);\r\n    console.log(fullCity);\r\n    setFavPlaces((prevValue) => {\r\n      return [...prevValue, fullCity];\r\n    });\r\n    setCityWeatherInfo((prevValue) => {\r\n      return [...prevValue, weatherData];\r\n    });\r\n  };\r\n  const removeFavoritePlaceHandler = () => {};\r\n\r\n  return (\r\n    <PlacesContext.Provider\r\n      value={{\r\n        favoritePlaces: favPlaces,\r\n        error: error,\r\n        cityWeatherInfo: cityWeatherInfo,\r\n        addFavoritePlace: addFavoritePlaceHandler,\r\n        removeFavoritePlace: removeFavoritePlaceHandler,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </PlacesContext.Provider>\r\n  );\r\n};\r\n\r\nexport default PlacesContextProvider;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}