{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\MY REACT PROJECTS\\\\Cool Weather App\\\\weather-app\\\\src\\\\components\\\\AddCityForm\\\\AddCity.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { PlacesContext } from \"../../context/place-context\";\nimport classes from \"./AddCity.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddCity = props => {\n  _s();\n\n  const [places, setPlaces] = useState([]);\n  const [availableCitiesInSelectedCountry, setAvailableCitiesInSelectedCountry] = useState([]);\n  const [isSelected, setIsSelected] = useState({\n    country: false,\n    city: false\n  });\n  const [cityToAdd, setCityToAdd] = useState();\n  const cssClasses = [classes.container, props.show ? classes.FormOpen : classes.FormClosed];\n  const placesCtx = useContext(PlacesContext);\n\n  const getPlacesHandler = async () => {\n    const response = await fetch(\"https://countriesnow.space/api/v0.1/countries\");\n    const places = await response.json();\n    setPlaces(places.data);\n  };\n\n  useEffect(() => {\n    getPlacesHandler();\n  });\n\n  const selectedCountryHandler = event => {\n    // placesCtx.getCitiesOfSelectedCountry(event.target.value);\n    const selectedCountryIndex = places.findIndex(element => element.country === event.target.value);\n    setAvailableCitiesInSelectedCountry(places[selectedCountryIndex].cities);\n    setIsSelected(prevValue => ({ ...prevValue,\n      country: true\n    }));\n  };\n\n  const selectedCityHandler = event => {\n    setCityToAdd(event.target.value);\n    setIsSelected(prevValue => ({ ...prevValue,\n      city: true\n    }));\n  };\n\n  const addCityHandler = () => {\n    // placesCtx.addCity(cityToAdd);\n    placesCtx.addFavoritePlace(cityToAdd);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: placesCtx.isVisible ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: selectedCountryHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          selected: true,\n          hidden: true,\n          value: null,\n          children: \"--Select Country--\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), places.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: item.country,\n            children: item.country\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: selectedCityHandler,\n        disabled: !isSelected.country,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          selected: true,\n          hidden: true,\n          value: null,\n          children: \"--Select City--\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), availableCitiesInSelectedCountry.map((city, index) => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: city,\n            children: city\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addCityHandler,\n        disabled: !isSelected.country || !isSelected.city,\n        children: \"Add City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), placesCtx.favoritePlaces.map((city, index) => {\n        return /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: city.cityName\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 20\n        }, this);\n      }), placesCtx.error && /*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          color: \"red\"\n        },\n        children: placesCtx.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        placesCtx.showForm();\n      },\n      children: \"Add city\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddCity, \"Ci0hVZFssUbp8UADmEuL9Mko8oo=\");\n\n_c = AddCity;\nexport default AddCity;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCity\");","map":{"version":3,"names":["React","useContext","useEffect","useState","PlacesContext","classes","AddCity","props","places","setPlaces","availableCitiesInSelectedCountry","setAvailableCitiesInSelectedCountry","isSelected","setIsSelected","country","city","cityToAdd","setCityToAdd","cssClasses","container","show","FormOpen","FormClosed","placesCtx","getPlacesHandler","response","fetch","json","data","selectedCountryHandler","event","selectedCountryIndex","findIndex","element","target","value","cities","prevValue","selectedCityHandler","addCityHandler","addFavoritePlace","isVisible","map","item","index","favoritePlaces","cityName","error","color","showForm"],"sources":["C:/Users/PC/Desktop/MY REACT PROJECTS/Cool Weather App/weather-app/src/components/AddCityForm/AddCity.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { PlacesContext } from \"../../context/place-context\";\r\n\r\nimport classes from \"./AddCity.module.css\";\r\n\r\nconst AddCity = (props) => {\r\n  const [places, setPlaces] = useState([]);\r\n  const [\r\n    availableCitiesInSelectedCountry,\r\n    setAvailableCitiesInSelectedCountry,\r\n  ] = useState([]);\r\n  const [isSelected, setIsSelected] = useState({ country: false, city: false });\r\n  const [cityToAdd, setCityToAdd] = useState();\r\n\r\n  const cssClasses = [\r\n    classes.container,\r\n    props.show ? classes.FormOpen : classes.FormClosed,\r\n  ];\r\n\r\n  const placesCtx = useContext(PlacesContext);\r\n\r\n  const getPlacesHandler = async () => {\r\n    const response = await fetch(\r\n      \"https://countriesnow.space/api/v0.1/countries\"\r\n    );\r\n    const places = await response.json();\r\n    setPlaces(places.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPlacesHandler();\r\n  });\r\n  const selectedCountryHandler = (event) => {\r\n    // placesCtx.getCitiesOfSelectedCountry(event.target.value);\r\n    const selectedCountryIndex = places.findIndex(\r\n      (element) => element.country === event.target.value\r\n    );\r\n    setAvailableCitiesInSelectedCountry(places[selectedCountryIndex].cities);\r\n    setIsSelected((prevValue) => ({ ...prevValue, country: true }));\r\n  };\r\n  const selectedCityHandler = (event) => {\r\n    setCityToAdd(event.target.value);\r\n    setIsSelected((prevValue) => ({ ...prevValue, city: true }));\r\n  };\r\n\r\n  const addCityHandler = () => {\r\n    // placesCtx.addCity(cityToAdd);\r\n\r\n    placesCtx.addFavoritePlace(cityToAdd);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {placesCtx.isVisible ? (\r\n        <div className={classes.container}>\r\n          <select onChange={selectedCountryHandler}>\r\n            <option disabled selected hidden value={null}>\r\n              --Select Country--\r\n            </option>\r\n            {places.map((item, index) => {\r\n              return (\r\n                <option key={index} value={item.country}>\r\n                  {item.country}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n\r\n          <select onChange={selectedCityHandler} disabled={!isSelected.country}>\r\n            <option disabled selected hidden value={null}>\r\n              --Select City--\r\n            </option>\r\n            {availableCitiesInSelectedCountry.map((city, index) => {\r\n              return (\r\n                <option key={index} value={city}>\r\n                  {city}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n          <button\r\n            onClick={addCityHandler}\r\n            disabled={!isSelected.country || !isSelected.city}\r\n          >\r\n            Add City\r\n          </button>\r\n          <button>Close</button>\r\n          {placesCtx.favoritePlaces.map((city, index) => {\r\n            return <h2 key={index}>{city.cityName}</h2>;\r\n          })}\r\n          {placesCtx.error && (\r\n            <h4 style={{ color: \"red\" }}>{placesCtx.error}</h4>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <button\r\n          onClick={() => {\r\n            placesCtx.showForm();\r\n          }}\r\n        >\r\n          Add city\r\n        </button>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AddCity;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}