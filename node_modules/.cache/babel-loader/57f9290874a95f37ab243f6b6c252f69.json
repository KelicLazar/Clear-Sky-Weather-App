{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\MY REACT PROJECTS\\\\Cool Weather App\\\\weather-app\\\\src\\\\context\\\\place-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PlacesContext = /*#__PURE__*/React.createContext({\n  getPlaces: () => {},\n  placesData: [],\n  addedCities: [\"London\"],\n  addCity: () => {},\n  //treba?\n  removeCity: () => {} //treba?\n\n});\n\nconst PlacesContextProvider = props => {\n  _s();\n\n  const [places, setPlaces] = useState([]);\n  console.log(\"loaded ctx\");\n\n  const getPlacesHandler = async () => {\n    const response = await fetch(\"https://countriesnow.space/api/v0.1/countries\");\n    const places = await response.json();\n    setPlaces(places.data);\n  };\n\n  const addCityHandler = () => {};\n\n  const removeCityHandler = () => {};\n\n  return /*#__PURE__*/_jsxDEV(PlacesContext.Provider, {\n    value: {\n      addedCities: favoriteCities,\n      placesData: places,\n      selectedCity: cityToAdd,\n      getPlaces: getPlacesHandler,\n      addCity: addCityHandler,\n      removeCity: removeCityHandler\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PlacesContextProvider, \"CEQVXr2IjoQ3A0PERN12D+A9LME=\");\n\n_c = PlacesContextProvider;\nexport default PlacesContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlacesContextProvider\");","map":{"version":3,"names":["React","useState","PlacesContext","createContext","getPlaces","placesData","addedCities","addCity","removeCity","PlacesContextProvider","props","places","setPlaces","console","log","getPlacesHandler","response","fetch","json","data","addCityHandler","removeCityHandler","favoriteCities","selectedCity","cityToAdd","children"],"sources":["C:/Users/PC/Desktop/MY REACT PROJECTS/Cool Weather App/weather-app/src/context/place-context.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport const PlacesContext = React.createContext({\r\n  getPlaces: () => {},\r\n  placesData: [],\r\n  addedCities: [\"London\"],\r\n  addCity: () => {}, //treba?\r\n  removeCity: () => {}, //treba?\r\n});\r\n\r\nconst PlacesContextProvider = (props) => {\r\n  const [places, setPlaces] = useState([]);\r\n  console.log(\"loaded ctx\");\r\n  const getPlacesHandler = async () => {\r\n    const response = await fetch(\r\n      \"https://countriesnow.space/api/v0.1/countries\"\r\n    );\r\n    const places = await response.json();\r\n    setPlaces(places.data);\r\n  };\r\n\r\n  const addCityHandler = () => {};\r\n  const removeCityHandler = () => {};\r\n\r\n  return (\r\n    <PlacesContext.Provider\r\n      value={{\r\n        addedCities: favoriteCities,\r\n        placesData: places,\r\n        selectedCity: cityToAdd,\r\n        getPlaces: getPlacesHandler,\r\n        addCity: addCityHandler,\r\n        removeCity: removeCityHandler,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </PlacesContext.Provider>\r\n  );\r\n};\r\n\r\nexport default PlacesContextProvider;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,OAAO,MAAMC,aAAa,gBAAGF,KAAK,CAACG,aAAN,CAAoB;EAC/CC,SAAS,EAAE,MAAM,CAAE,CAD4B;EAE/CC,UAAU,EAAE,EAFmC;EAG/CC,WAAW,EAAE,CAAC,QAAD,CAHkC;EAI/CC,OAAO,EAAE,MAAM,CAAE,CAJ8B;EAI5B;EACnBC,UAAU,EAAE,MAAM,CAAE,CAL2B,CAKzB;;AALyB,CAApB,CAAtB;;AAQP,MAAMC,qBAAqB,GAAIC,KAAD,IAAW;EAAA;;EACvC,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;EACAY,OAAO,CAACC,GAAR,CAAY,YAAZ;;EACA,MAAMC,gBAAgB,GAAG,YAAY;IACnC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,+CAD0B,CAA5B;IAGA,MAAMN,MAAM,GAAG,MAAMK,QAAQ,CAACE,IAAT,EAArB;IACAN,SAAS,CAACD,MAAM,CAACQ,IAAR,CAAT;EACD,CAND;;EAQA,MAAMC,cAAc,GAAG,MAAM,CAAE,CAA/B;;EACA,MAAMC,iBAAiB,GAAG,MAAM,CAAE,CAAlC;;EAEA,oBACE,QAAC,aAAD,CAAe,QAAf;IACE,KAAK,EAAE;MACLf,WAAW,EAAEgB,cADR;MAELjB,UAAU,EAAEM,MAFP;MAGLY,YAAY,EAAEC,SAHT;MAILpB,SAAS,EAAEW,gBAJN;MAKLR,OAAO,EAAEa,cALJ;MAMLZ,UAAU,EAAEa;IANP,CADT;IAAA,UAUGX,KAAK,CAACe;EAVT;IAAA;IAAA;IAAA;EAAA,QADF;AAcD,CA5BD;;GAAMhB,qB;;KAAAA,qB;AA8BN,eAAeA,qBAAf"},"metadata":{},"sourceType":"module"}