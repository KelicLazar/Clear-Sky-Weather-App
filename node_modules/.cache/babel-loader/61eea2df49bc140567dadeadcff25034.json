{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\MY REACT PROJECTS\\\\Cool Weather App\\\\weather-app\\\\src\\\\context\\\\place-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PlacesContext = /*#__PURE__*/React.createContext({\n  getPlaces: () => {},\n  placesData: [],\n  addedCities: [\"London\"],\n  isSelected: {\n    country: false,\n    city: false\n  },\n  //validation treba\n  selectedCity: null,\n  // ne treba vrv?\n  handleCityIsSelected: () => {},\n  //ne treba\n  addCity: () => {},\n  //treba?\n  removeCity: () => {} //treba?\n\n});\n\nconst PlacesContextProvider = props => {\n  _s();\n\n  const [places, setPlaces] = useState([]);\n  const [cityToAdd, setCityToAdd] = useState(null);\n  const [addedCities, setAddedCities] = useState([\"London\"]);\n  const favoriteCities = [\"London\"];\n  const [isSelected, setIsSelected] = useState({\n    country: false,\n    city: false\n  });\n  console.log(\"loaded ctx\");\n\n  const getPlacesHandler = async () => {\n    const response = await fetch(\"https://countriesnow.space/api/v0.1/countries\");\n    const places = await response.json();\n    setPlaces(places.data);\n  };\n\n  const cityIsSelectedHandler = city => {\n    setIsSelected(prevValue => ({ ...prevValue,\n      city: true\n    }));\n    setCityToAdd(city);\n  };\n\n  const addCityHandler = () => {\n    favoriteCities.push(cityToAdd);\n  };\n\n  const removeCityHandler = () => {};\n\n  return /*#__PURE__*/_jsxDEV(PlacesContext.Provider, {\n    value: {\n      addedCities: favoriteCities,\n      placesData: places,\n      isSelected: isSelected,\n      selectedCity: cityToAdd,\n      handleCityIsSelected: cityIsSelectedHandler,\n      getPlaces: getPlacesHandler,\n      addCity: addCityHandler,\n      removeCity: removeCityHandler\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PlacesContextProvider, \"aewJbCMqptMPJ+HY5x4UnoyLQoI=\");\n\n_c = PlacesContextProvider;\nexport default PlacesContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlacesContextProvider\");","map":{"version":3,"names":["React","useState","PlacesContext","createContext","getPlaces","placesData","addedCities","isSelected","country","city","selectedCity","handleCityIsSelected","addCity","removeCity","PlacesContextProvider","props","places","setPlaces","cityToAdd","setCityToAdd","setAddedCities","favoriteCities","setIsSelected","console","log","getPlacesHandler","response","fetch","json","data","cityIsSelectedHandler","prevValue","addCityHandler","push","removeCityHandler","children"],"sources":["C:/Users/PC/Desktop/MY REACT PROJECTS/Cool Weather App/weather-app/src/context/place-context.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport const PlacesContext = React.createContext({\r\n  getPlaces: () => {},\r\n  placesData: [],\r\n  addedCities: [\"London\"],\r\n  isSelected: { country: false, city: false }, //validation treba\r\n  selectedCity: null, // ne treba vrv?\r\n  handleCityIsSelected: () => {}, //ne treba\r\n  addCity: () => {}, //treba?\r\n  removeCity: () => {}, //treba?\r\n});\r\n\r\nconst PlacesContextProvider = (props) => {\r\n  const [places, setPlaces] = useState([]);\r\n  const [cityToAdd, setCityToAdd] = useState(null);\r\n  const [addedCities, setAddedCities] = useState([\"London\"]);\r\n  const favoriteCities = [\"London\"];\r\n  const [isSelected, setIsSelected] = useState({ country: false, city: false });\r\n  console.log(\"loaded ctx\");\r\n  const getPlacesHandler = async () => {\r\n    const response = await fetch(\r\n      \"https://countriesnow.space/api/v0.1/countries\"\r\n    );\r\n    const places = await response.json();\r\n    setPlaces(places.data);\r\n  };\r\n\r\n  const cityIsSelectedHandler = (city) => {\r\n    setIsSelected((prevValue) => ({ ...prevValue, city: true }));\r\n    setCityToAdd(city);\r\n  };\r\n  const addCityHandler = () => {\r\n    favoriteCities.push(cityToAdd);\r\n  };\r\n  const removeCityHandler = () => {};\r\n\r\n  return (\r\n    <PlacesContext.Provider\r\n      value={{\r\n        addedCities: favoriteCities,\r\n        placesData: places,\r\n        isSelected: isSelected,\r\n        selectedCity: cityToAdd,\r\n        handleCityIsSelected: cityIsSelectedHandler,\r\n        getPlaces: getPlacesHandler,\r\n        addCity: addCityHandler,\r\n        removeCity: removeCityHandler,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </PlacesContext.Provider>\r\n  );\r\n};\r\n\r\nexport default PlacesContextProvider;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,OAAO,MAAMC,aAAa,gBAAGF,KAAK,CAACG,aAAN,CAAoB;EAC/CC,SAAS,EAAE,MAAM,CAAE,CAD4B;EAE/CC,UAAU,EAAE,EAFmC;EAG/CC,WAAW,EAAE,CAAC,QAAD,CAHkC;EAI/CC,UAAU,EAAE;IAAEC,OAAO,EAAE,KAAX;IAAkBC,IAAI,EAAE;EAAxB,CAJmC;EAIF;EAC7CC,YAAY,EAAE,IALiC;EAK3B;EACpBC,oBAAoB,EAAE,MAAM,CAAE,CANiB;EAMf;EAChCC,OAAO,EAAE,MAAM,CAAE,CAP8B;EAO5B;EACnBC,UAAU,EAAE,MAAM,CAAE,CAR2B,CAQzB;;AARyB,CAApB,CAAtB;;AAWP,MAAMC,qBAAqB,GAAIC,KAAD,IAAW;EAAA;;EACvC,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACiB,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,IAAD,CAA1C;EACA,MAAM,CAACK,WAAD,EAAcc,cAAd,IAAgCnB,QAAQ,CAAC,CAAC,QAAD,CAAD,CAA9C;EACA,MAAMoB,cAAc,GAAG,CAAC,QAAD,CAAvB;EACA,MAAM,CAACd,UAAD,EAAae,aAAb,IAA8BrB,QAAQ,CAAC;IAAEO,OAAO,EAAE,KAAX;IAAkBC,IAAI,EAAE;EAAxB,CAAD,CAA5C;EACAc,OAAO,CAACC,GAAR,CAAY,YAAZ;;EACA,MAAMC,gBAAgB,GAAG,YAAY;IACnC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,+CAD0B,CAA5B;IAGA,MAAMX,MAAM,GAAG,MAAMU,QAAQ,CAACE,IAAT,EAArB;IACAX,SAAS,CAACD,MAAM,CAACa,IAAR,CAAT;EACD,CAND;;EAQA,MAAMC,qBAAqB,GAAIrB,IAAD,IAAU;IACtCa,aAAa,CAAES,SAAD,KAAgB,EAAE,GAAGA,SAAL;MAAgBtB,IAAI,EAAE;IAAtB,CAAhB,CAAD,CAAb;IACAU,YAAY,CAACV,IAAD,CAAZ;EACD,CAHD;;EAIA,MAAMuB,cAAc,GAAG,MAAM;IAC3BX,cAAc,CAACY,IAAf,CAAoBf,SAApB;EACD,CAFD;;EAGA,MAAMgB,iBAAiB,GAAG,MAAM,CAAE,CAAlC;;EAEA,oBACE,QAAC,aAAD,CAAe,QAAf;IACE,KAAK,EAAE;MACL5B,WAAW,EAAEe,cADR;MAELhB,UAAU,EAAEW,MAFP;MAGLT,UAAU,EAAEA,UAHP;MAILG,YAAY,EAAEQ,SAJT;MAKLP,oBAAoB,EAAEmB,qBALjB;MAML1B,SAAS,EAAEqB,gBANN;MAOLb,OAAO,EAAEoB,cAPJ;MAQLnB,UAAU,EAAEqB;IARP,CADT;IAAA,UAYGnB,KAAK,CAACoB;EAZT;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD,CAxCD;;GAAMrB,qB;;KAAAA,qB;AA0CN,eAAeA,qBAAf"},"metadata":{},"sourceType":"module"}