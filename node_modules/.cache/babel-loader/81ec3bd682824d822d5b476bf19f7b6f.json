{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\MY REACT PROJECTS\\\\Cool Weather App\\\\weather-app\\\\src\\\\components\\\\AddCity.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport { PlacesContext } from \"../context/place-context\";\nimport classes from \"./AddCity.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddCity = () => {\n  _s();\n\n  const placesCtx = useContext(PlacesContext);\n  useEffect(() => {\n    placesCtx.getPlaces();\n  });\n\n  const selectedCountryHandler = event => {\n    placesCtx.getCitiesOfSelectedCountry(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: selectedCountryHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          selected: true,\n          hidden: true,\n          value: null,\n          children: \"--Select Country--\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), placesCtx.placesData.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: item.country,\n            children: item.country\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        disabled: !placesCtx.countryIsSelected,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          selected: true,\n          hidden: true,\n          value: null,\n          children: \"--Select City--\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), placesCtx.availableCitiesInSelectedCountry.map((city, index) => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: city,\n            children: city\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddCity, \"gYUWd+rNyfp0HXR8YopNnDbOkHA=\");\n\n_c = AddCity;\nexport default AddCity;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCity\");","map":{"version":3,"names":["React","useContext","useEffect","useRef","useState","PlacesContext","classes","AddCity","placesCtx","getPlaces","selectedCountryHandler","event","getCitiesOfSelectedCountry","target","value","placesData","map","item","index","country","countryIsSelected","availableCitiesInSelectedCountry","city"],"sources":["C:/Users/PC/Desktop/MY REACT PROJECTS/Cool Weather App/weather-app/src/components/AddCity.js"],"sourcesContent":["import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { PlacesContext } from \"../context/place-context\";\r\nimport classes from \"./AddCity.module.css\";\r\n\r\nconst AddCity = () => {\r\n  const placesCtx = useContext(PlacesContext);\r\n\r\n  useEffect(() => {\r\n    placesCtx.getPlaces();\r\n  });\r\n  const selectedCountryHandler = (event) => {\r\n    placesCtx.getCitiesOfSelectedCountry(event.target.value);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <select onChange={selectedCountryHandler}>\r\n          <option disabled selected hidden value={null}>\r\n            --Select Country--\r\n          </option>\r\n          {placesCtx.placesData.map((item, index) => {\r\n            return (\r\n              <option key={index} value={item.country}>\r\n                {item.country}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n\r\n        <select disabled={!placesCtx.countryIsSelected}>\r\n          <option disabled selected hidden value={null}>\r\n            --Select City--\r\n          </option>\r\n          {placesCtx.availableCitiesInSelectedCountry.map((city, index) => {\r\n            return (\r\n              <option key={index} value={city}>\r\n                {city}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AddCity;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,MAAvC,EAA+CC,QAA/C,QAA+D,OAA/D;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;EAAA;;EACpB,MAAMC,SAAS,GAAGP,UAAU,CAACI,aAAD,CAA5B;EAEAH,SAAS,CAAC,MAAM;IACdM,SAAS,CAACC,SAAV;EACD,CAFQ,CAAT;;EAGA,MAAMC,sBAAsB,GAAIC,KAAD,IAAW;IACxCH,SAAS,CAACI,0BAAV,CAAqCD,KAAK,CAACE,MAAN,CAAaC,KAAlD;EACD,CAFD;;EAGA,oBACE,QAAC,KAAD,CAAO,QAAP;IAAA,uBACE;MAAA,wBACE;QAAQ,QAAQ,EAAEJ,sBAAlB;QAAA,wBACE;UAAQ,QAAQ,MAAhB;UAAiB,QAAQ,MAAzB;UAA0B,MAAM,MAAhC;UAAiC,KAAK,EAAE,IAAxC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,EAIGF,SAAS,CAACO,UAAV,CAAqBC,GAArB,CAAyB,CAACC,IAAD,EAAOC,KAAP,KAAiB;UACzC,oBACE;YAAoB,KAAK,EAAED,IAAI,CAACE,OAAhC;YAAA,UACGF,IAAI,CAACE;UADR,GAAaD,KAAb;YAAA;YAAA;YAAA;UAAA,QADF;QAKD,CANA,CAJH;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAcE;QAAQ,QAAQ,EAAE,CAACV,SAAS,CAACY,iBAA7B;QAAA,wBACE;UAAQ,QAAQ,MAAhB;UAAiB,QAAQ,MAAzB;UAA0B,MAAM,MAAhC;UAAiC,KAAK,EAAE,IAAxC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,EAIGZ,SAAS,CAACa,gCAAV,CAA2CL,GAA3C,CAA+C,CAACM,IAAD,EAAOJ,KAAP,KAAiB;UAC/D,oBACE;YAAoB,KAAK,EAAEI,IAA3B;YAAA,UACGA;UADH,GAAaJ,KAAb;YAAA;YAAA;YAAA;UAAA,QADF;QAKD,CANA,CAJH;MAAA;QAAA;QAAA;QAAA;MAAA,QAdF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA+BD,CAxCD;;GAAMX,O;;KAAAA,O;AA0CN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}