{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\MY REACT PROJECTS\\\\Cool Weather App\\\\weather-app\\\\src\\\\components\\\\AddCityForm\\\\AddCity.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { PlacesContext } from \"../../context/place-context\";\nimport classes from \"./AddCity.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddCity = () => {\n  _s();\n\n  const [places, setPlaces] = useState([]);\n  const [availableCitiesInSelectedCountry, setAvailableCitiesInSelectedCountry] = useState([]);\n  const [isSelected, setIsSelected] = useState({\n    country: false,\n    city: false\n  });\n  const [cityToAdd, setCityToAdd] = useState();\n  const placesCtx = useContext(PlacesContext);\n\n  const getPlacesHandler = async () => {\n    const response = await fetch(\"https://countriesnow.space/api/v0.1/countries\");\n    const places = await response.json();\n    setPlaces(places.data);\n  };\n\n  useEffect(() => {\n    getPlacesHandler();\n  });\n\n  const selectedCountryHandler = event => {\n    // placesCtx.getCitiesOfSelectedCountry(event.target.value);\n    const selectedCountryIndex = places.findIndex(element => element.country === event.target.value);\n    setAvailableCitiesInSelectedCountry(places[selectedCountryIndex].cities);\n    setIsSelected(prevValue => ({ ...prevValue,\n      country: true\n    }));\n  };\n\n  const selectedCityHandler = event => {\n    setCityToAdd(event.target.value);\n    setIsSelected(prevValue => ({ ...prevValue,\n      city: true\n    }));\n  };\n\n  const addCityHandler = () => {\n    // placesCtx.addCity(cityToAdd);\n    placesCtx.addFavoritePlace(cityToAdd);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: placesCtx.isVisible ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: selectedCountryHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          selected: true,\n          hidden: true,\n          value: null,\n          children: \"--Select Country--\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), places.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: item.country,\n            children: item.country\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: selectedCityHandler,\n        disabled: !isSelected.country,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          selected: true,\n          hidden: true,\n          value: null,\n          children: \"--Select City--\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), availableCitiesInSelectedCountry.map((city, index) => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: city,\n            children: city\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addCityHandler,\n        disabled: !isSelected.country || !isSelected.city,\n        children: \"Add City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), placesCtx.favoritePlaces.map((city, index) => {\n        return /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: city.cityName\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 20\n        }, this);\n      }), placesCtx.error && /*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          color: \"red\"\n        },\n        children: placesCtx.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        placesCtx.showForm();\n      },\n      children: \"Add city\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddCity, \"Ci0hVZFssUbp8UADmEuL9Mko8oo=\");\n\n_c = AddCity;\nexport default AddCity;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCity\");","map":{"version":3,"names":["React","useContext","useEffect","useState","PlacesContext","classes","AddCity","places","setPlaces","availableCitiesInSelectedCountry","setAvailableCitiesInSelectedCountry","isSelected","setIsSelected","country","city","cityToAdd","setCityToAdd","placesCtx","getPlacesHandler","response","fetch","json","data","selectedCountryHandler","event","selectedCountryIndex","findIndex","element","target","value","cities","prevValue","selectedCityHandler","addCityHandler","addFavoritePlace","isVisible","container","map","item","index","favoritePlaces","cityName","error","color","showForm"],"sources":["C:/Users/PC/Desktop/MY REACT PROJECTS/Cool Weather App/weather-app/src/components/AddCityForm/AddCity.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { PlacesContext } from \"../../context/place-context\";\r\n\r\nimport classes from \"./AddCity.module.css\";\r\n\r\nconst AddCity = () => {\r\n  const [places, setPlaces] = useState([]);\r\n  const [\r\n    availableCitiesInSelectedCountry,\r\n    setAvailableCitiesInSelectedCountry,\r\n  ] = useState([]);\r\n  const [isSelected, setIsSelected] = useState({ country: false, city: false });\r\n  const [cityToAdd, setCityToAdd] = useState();\r\n\r\n  const placesCtx = useContext(PlacesContext);\r\n\r\n  const getPlacesHandler = async () => {\r\n    const response = await fetch(\r\n      \"https://countriesnow.space/api/v0.1/countries\"\r\n    );\r\n    const places = await response.json();\r\n    setPlaces(places.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPlacesHandler();\r\n  });\r\n  const selectedCountryHandler = (event) => {\r\n    // placesCtx.getCitiesOfSelectedCountry(event.target.value);\r\n    const selectedCountryIndex = places.findIndex(\r\n      (element) => element.country === event.target.value\r\n    );\r\n    setAvailableCitiesInSelectedCountry(places[selectedCountryIndex].cities);\r\n    setIsSelected((prevValue) => ({ ...prevValue, country: true }));\r\n  };\r\n  const selectedCityHandler = (event) => {\r\n    setCityToAdd(event.target.value);\r\n    setIsSelected((prevValue) => ({ ...prevValue, city: true }));\r\n  };\r\n\r\n  const addCityHandler = () => {\r\n    // placesCtx.addCity(cityToAdd);\r\n\r\n    placesCtx.addFavoritePlace(cityToAdd);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {placesCtx.isVisible ? (\r\n        <div className={classes.container}>\r\n          <select onChange={selectedCountryHandler}>\r\n            <option disabled selected hidden value={null}>\r\n              --Select Country--\r\n            </option>\r\n            {places.map((item, index) => {\r\n              return (\r\n                <option key={index} value={item.country}>\r\n                  {item.country}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n\r\n          <select onChange={selectedCityHandler} disabled={!isSelected.country}>\r\n            <option disabled selected hidden value={null}>\r\n              --Select City--\r\n            </option>\r\n            {availableCitiesInSelectedCountry.map((city, index) => {\r\n              return (\r\n                <option key={index} value={city}>\r\n                  {city}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n          <button\r\n            onClick={addCityHandler}\r\n            disabled={!isSelected.country || !isSelected.city}\r\n          >\r\n            Add City\r\n          </button>\r\n          {placesCtx.favoritePlaces.map((city, index) => {\r\n            return <h2 key={index}>{city.cityName}</h2>;\r\n          })}\r\n          {placesCtx.error && (\r\n            <h4 style={{ color: \"red\" }}>{placesCtx.error}</h4>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <button\r\n          onClick={() => {\r\n            placesCtx.showForm();\r\n          }}\r\n        >\r\n          Add city\r\n        </button>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AddCity;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}