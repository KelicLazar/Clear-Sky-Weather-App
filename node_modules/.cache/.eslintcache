[{"C:\\Users\\PC\\Desktop\\MY REACT PROJECTS\\Cool Weather App\\weather-app\\src\\index.js":"1","C:\\Users\\PC\\Desktop\\MY REACT PROJECTS\\Cool Weather App\\weather-app\\src\\App.js":"2","C:\\Users\\PC\\Desktop\\MY REACT PROJECTS\\Cool Weather App\\weather-app\\src\\reportWebVitals.js":"3","C:\\Users\\PC\\Desktop\\MY REACT PROJECTS\\Cool Weather App\\weather-app\\src\\components\\CitiesList.js":"4","C:\\Users\\PC\\Desktop\\MY REACT PROJECTS\\Cool Weather App\\weather-app\\src\\context\\place-context.js":"5","C:\\Users\\PC\\Desktop\\MY REACT PROJECTS\\Cool Weather App\\weather-app\\src\\components\\Backdrop\\Backdrop.js":"6","C:\\Users\\PC\\Desktop\\MY REACT PROJECTS\\Cool Weather App\\weather-app\\src\\components\\AddCityForm\\AddCity.js":"7","C:\\Users\\PC\\Desktop\\MY REACT PROJECTS\\Cool Weather App\\weather-app\\src\\components\\CityInfo.js":"8","C:\\Users\\PC\\Desktop\\MY REACT PROJECTS\\Cool Weather App\\weather-app\\src\\components\\ui\\FlexContainer.js":"9","C:\\Users\\PC\\Desktop\\MY REACT PROJECTS\\Cool Weather App\\weather-app\\src\\components\\ui\\FlexItem.js":"10","C:\\Users\\PC\\Desktop\\MY REACT PROJECTS\\Cool Weather App\\weather-app\\src\\components\\ui\\CityGuardWrapper.js":"11","C:\\Users\\PC\\Desktop\\MY REACT PROJECTS\\Cool Weather App\\weather-app\\src\\components\\CityInfoHourly.js":"12","C:\\Users\\PC\\Desktop\\MY REACT PROJECTS\\Cool Weather App\\weather-app\\src\\components\\Nav.js":"13","C:\\Users\\PC\\Desktop\\MY REACT PROJECTS\\Cool Weather App\\weather-app\\src\\components\\ui\\LoadingSpinner.js":"14","C:\\Users\\PC\\Desktop\\MY REACT PROJECTS\\Cool Weather App\\weather-app\\src\\context\\longCities.js":"15","C:\\Users\\PC\\Desktop\\MY REACT PROJECTS\\Cool Weather App\\weather-app\\src\\services\\city-services.js":"16","C:\\Users\\PC\\Desktop\\MY REACT PROJECTS\\Cool Weather App\\weather-app\\src\\components\\CityItem.js":"17"},{"size":655,"mtime":1655306040590,"results":"18","hashOfConfig":"19"},{"size":5098,"mtime":1677358466522,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1654107978923,"results":"21","hashOfConfig":"19"},{"size":1266,"mtime":1677358522434,"results":"22","hashOfConfig":"19"},{"size":4486,"mtime":1677083352145,"results":"23","hashOfConfig":"19"},{"size":341,"mtime":1655585143700,"results":"24","hashOfConfig":"19"},{"size":3574,"mtime":1677258711016,"results":"25","hashOfConfig":"19"},{"size":3885,"mtime":1677276747905,"results":"26","hashOfConfig":"19"},{"size":195,"mtime":1677172101094,"results":"27","hashOfConfig":"19"},{"size":175,"mtime":1668521675208,"results":"28","hashOfConfig":"19"},{"size":568,"mtime":1668521675205,"results":"29","hashOfConfig":"19"},{"size":12509,"mtime":1677262453440,"results":"30","hashOfConfig":"19"},{"size":4930,"mtime":1677359976489,"results":"31","hashOfConfig":"19"},{"size":266,"mtime":1668521675209,"results":"32","hashOfConfig":"19"},{"size":797387,"mtime":1677098119573,"results":"33","hashOfConfig":"19"},{"size":3422,"mtime":1677282009268,"results":"34","hashOfConfig":"19"},{"size":3737,"mtime":1677279649397,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"lwg7kd",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},"C:\\Users\\PC\\Desktop\\MY REACT PROJECTS\\Cool Weather App\\weather-app\\src\\index.js",[],[],[],"C:\\Users\\PC\\Desktop\\MY REACT PROJECTS\\Cool Weather App\\weather-app\\src\\App.js",["96","97","98","99","100","101"],[],"import React, { useState, Suspense, useContext } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport { PlacesContext } from \"./context/place-context\";\r\nimport { getCitiesInfo, refreshCity } from \"./services/city-services\";\r\nimport AddCity from \"./components/AddCityForm/AddCity\";\r\nimport Backdrop from \"./components/Backdrop/Backdrop\";\r\nimport {\r\n  Alert,\r\n  AlertTitle,\r\n  Fade,\r\n  Skeleton,\r\n  Slide,\r\n  Snackbar,\r\n  Zoom,\r\n} from \"@mui/material\";\r\nconst CitiesList = React.lazy(() => import(\"./components/CitiesList\"));\r\nconst CityInfo = React.lazy(() => import(\"./components/CityInfo\"));\r\n\r\nconst CityInfoHourly = React.lazy(() => import(\"./components/CityInfoHourly\"));\r\nconst Nav = React.lazy(() => import(\"./components/Nav\"));\r\nconst LoadingSpinner = React.lazy(() =>\r\n  import(\"./components/ui/LoadingSpinner\")\r\n);\r\n\r\nfunction App() {\r\n  const [showBackdrop, setShowBackdrop] = useState(false);\r\n  const [citiesData, setCitiesData] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const citiesInfo = await getCitiesInfo();\r\n      setCitiesData(citiesInfo);\r\n    })();\r\n  }, []);\r\n\r\n  const showBackdropHandler = () => {\r\n    setShowBackdrop(true);\r\n  };\r\n  const closeBackdropHandler = () => {\r\n    setShowBackdrop(false);\r\n  };\r\n  const handleClick = async () => {\r\n    setCitiesData(await getCitiesInfo());\r\n  };\r\n  const setCitiesHandler = async (allCitiesData) => {\r\n    if (allCitiesData.message) {\r\n      setError(allCitiesData);\r\n    } else {\r\n      setCitiesData(allCitiesData);\r\n    }\r\n  };\r\n  const refreshCityHandler = async (cityName, index) => {\r\n    const refreshCityResponse = await refreshCity(cityName, index);\r\n    console.log(refreshCityResponse, \"refreshing city response\");\r\n    if (refreshCityResponse.message) {\r\n      setError({ message: refreshCityResponse.message, type: \"warning\" });\r\n    } else {\r\n      setCitiesData(refreshCityResponse.data);\r\n    }\r\n  };\r\n  const clearErrorHandler = (event, reason) => {\r\n    console.log(event, \"EVENT\");\r\n    console.log(reason, \"REASON\");\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setError((prev) => {\r\n      return { ...prev, message: \"\" };\r\n    });\r\n\r\n    setTimeout(() => {\r\n      setError(null);\r\n    }, 300);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Suspense fallback={<LoadingSpinner />}>\r\n        <BrowserRouter>\r\n          <Routes>\r\n            <Route path=\"/:city\" element={<CityInfo />}></Route>\r\n            <Route\r\n              path=\"/\"\r\n              element={\r\n                <React.Fragment>\r\n                  <Nav\r\n                    onClick={showBackdropHandler}\r\n                    onAdd={setCitiesHandler}\r\n                  ></Nav>\r\n\r\n                  <Slide\r\n                    direction=\"up\"\r\n                    in={!!error?.message}\r\n                    unmountOnExit\r\n                    mountOnEnter\r\n                  >\r\n                    <Snackbar\r\n                      transitionDuration={{ enter: 300, exit: 1000 }}\r\n                      autoHideDuration={4000}\r\n                      open={!!error?.message}\r\n                      onClose={clearErrorHandler}\r\n                    >\r\n                      <Alert\r\n                        variant=\"filled\"\r\n                        severity={error?.type}\r\n                        onClose={clearErrorHandler}\r\n                        style={{\r\n                          fontWeight: \"900\",\r\n                        }}\r\n                      >\r\n                        <AlertTitle\r\n                          style={{\r\n                            textTransform: \"uppercase\",\r\n                            fontSize: \"120%\",\r\n                            letterSpacing: \"2px\",\r\n                            fontWeight: \"700\",\r\n                          }}\r\n                        >\r\n                          {error?.message}\r\n                        </AlertTitle>\r\n                      </Alert>\r\n                    </Snackbar>\r\n                  </Slide>\r\n\r\n                  <Backdrop\r\n                    onClose={closeBackdropHandler}\r\n                    show={showBackdrop}\r\n                  ></Backdrop>\r\n                  {showBackdrop && (\r\n                    <AddCity\r\n                      close={closeBackdropHandler}\r\n                      show={showBackdrop}\r\n                      onAdd={setCitiesHandler}\r\n                    ></AddCity>\r\n                  )}\r\n\r\n                  <CitiesList\r\n                    citiesData={citiesData}\r\n                    onRemove={setCitiesHandler}\r\n                    onRefresh={refreshCityHandler}\r\n                  ></CitiesList>\r\n                </React.Fragment>\r\n              }\r\n            ></Route>\r\n\r\n            <Route path=\"/:city/hourly\" element={<CityInfoHourly />}></Route>\r\n            {/* <Route path=\"/*\" element={<Navigate to=\"/\" replace />}></Route> */}\r\n          </Routes>\r\n        </BrowserRouter>\r\n      </Suspense>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\PC\\Desktop\\MY REACT PROJECTS\\Cool Weather App\\weather-app\\src\\reportWebVitals.js",[],[],"C:\\Users\\PC\\Desktop\\MY REACT PROJECTS\\Cool Weather App\\weather-app\\src\\components\\CitiesList.js",["102","103","104","105","106","107","108","109"],[],"import classes from \"./CitiesList.module.css\";\r\nimport React, { useContext } from \"react\";\r\nimport { PlacesContext } from \"../context/place-context\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport FlexContainer from \"./ui/FlexContainer\";\r\nimport FlexItem from \"./ui/FlexItem\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { refreshCity, removeCity } from \"../services/city-services\";\r\nimport CityItem from \"./CityItem\";\r\n\r\nconst CitiesList = ({ citiesData, onRemove, onRefresh }) => {\r\n  const placesCtx = useContext(PlacesContext);\r\n  const navigate = useNavigate();\r\n  console.log(\"citiesData\", citiesData);\r\n  return (\r\n    <React.Fragment>\r\n      {/* {placesCtx.error && <h5 style={{ color: \"red\" }}>{placesCtx.error}</h5>} */}\r\n      <FlexContainer>\r\n        {citiesData.length > 0 &&\r\n          citiesData[0].current &&\r\n          citiesData.map((city, index) => {\r\n            return (\r\n              <CityItem\r\n                key={index}\r\n                city={city}\r\n                index={index}\r\n                onRefresh={onRefresh}\r\n                onRemove={onRemove}\r\n              />\r\n            );\r\n          })}\r\n      </FlexContainer>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CitiesList;\r\n",[],"C:\\Users\\PC\\Desktop\\MY REACT PROJECTS\\Cool Weather App\\weather-app\\src\\context\\place-context.js",[],[],"C:\\Users\\PC\\Desktop\\MY REACT PROJECTS\\Cool Weather App\\weather-app\\src\\components\\Backdrop\\Backdrop.js",[],[],"C:\\Users\\PC\\Desktop\\MY REACT PROJECTS\\Cool Weather App\\weather-app\\src\\components\\AddCityForm\\AddCity.js",["110","111","112"],[],"import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { PlacesContext } from \"../../context/place-context\";\r\nimport AsyncSelect from \"react-select/async\";\r\nimport classes from \"./AddCity.module.css\";\r\nimport { filterCities } from \"../../context/longCities\";\r\nimport { addCity } from \"../../services/city-services\";\r\n\r\nconst customTheme = (theme) => ({\r\n  ...theme,\r\n  colors: {\r\n    ...theme.colors,\r\n    primary: \"brown\",\r\n    primary25: \"#ccc\",\r\n    primary50: \"rgba(165, 42, 42, 0.733)\",\r\n    primary75: \"brown\",\r\n  },\r\n});\r\nconst customStyles = {\r\n  singleValue: (provided, state) => ({\r\n    ...provided,\r\n    fontWeight: \"500\",\r\n    color: state.hasValue ? \"brown\" : \"#ccc\",\r\n  }),\r\n  container: (provided, state) => ({\r\n    ...provided,\r\n    color: \"brown\",\r\n    borderColor: \"green\",\r\n  }),\r\n  valueContainer: (provided, state) => ({\r\n    ...provided,\r\n    color: \"brown\",\r\n  }),\r\n  placeholder: (provided, state) => ({\r\n    ...provided,\r\n    fontWeight: \"500\",\r\n    color: state.hasValue ? \"brown\" : \"#ccc\",\r\n  }),\r\n  menuList: (provided, state) => ({\r\n    ...provided,\r\n    border: \"2px solid brown\",\r\n    maxHeight: \"15vh\",\r\n  }),\r\n  dropdownIndicator: (provided, state) => ({\r\n    ...provided,\r\n    color: state.isFocused ? \"brown\" : \"#ccc\",\r\n  }),\r\n  clearIndicator: (provided, state) => ({\r\n    ...provided,\r\n    color: state.isFocused ? \"brown\" : \"#ccc\",\r\n  }),\r\n  indicatorSeparator: (provided, state) => ({\r\n    ...provided,\r\n    backgroundColor: state.isFocused ? \"brown\" : \"#ccc\",\r\n  }),\r\n  input: (provided, state) => ({\r\n    ...provided,\r\n    color: \"brown\",\r\n    fontWeight: \"500\",\r\n    width: \"150px\",\r\n  }),\r\n};\r\nconst filterOptions = (inputValue) => {\r\n  const filteredCities = filterCities(inputValue).map((city) => {\r\n    return { value: city, label: city };\r\n  });\r\n  return filteredCities;\r\n};\r\n\r\nconst AddCity = (props) => {\r\n  const [selectedCity, setSelectedCity] = useState(\"\");\r\n  const cssClasses = [\r\n    classes.container,\r\n    props.show ? classes.FormOpen : classes.FormClosed,\r\n  ];\r\n  const placesCtx = useContext(PlacesContext);\r\n\r\n  const addCityHandler = async (event) => {\r\n    event.preventDefault();\r\n    props.close();\r\n    const allCitiesInfo = await addCity(selectedCity);\r\n    props.onAdd(allCitiesInfo);\r\n  };\r\n  const closeFormHandler = () => {\r\n    props.close();\r\n  };\r\n  const loadCities = (inputValue, cb) => {\r\n    if (inputValue.length > 2) {\r\n      setTimeout(() => {\r\n        cb(filterOptions(inputValue));\r\n      }, 0);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={cssClasses.join(\" \")}>\r\n        <form onSubmit={addCityHandler}>\r\n          <AsyncSelect\r\n            onChange={(value, action) => {\r\n              if (value && value !== \"No cities\") {\r\n                setSelectedCity(value.value);\r\n              } else {\r\n                setSelectedCity(null);\r\n              }\r\n            }}\r\n            cacheOptions\r\n            autoFocus={true}\r\n            placeholder=\"City name...\"\r\n            noOptionsMessage={() => {\r\n              return \"Min 3 characters...\";\r\n            }}\r\n            isClearable\r\n            escapeClearsValue={true}\r\n            styles={customStyles}\r\n            theme={customTheme}\r\n            loadOptions={loadCities}\r\n          />\r\n          <div className={classes.formActions}>\r\n            <button onClick={closeFormHandler}>Close</button>\r\n            <button disabled={!selectedCity}>Add City</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AddCity;\r\n","C:\\Users\\PC\\Desktop\\MY REACT PROJECTS\\Cool Weather App\\weather-app\\src\\components\\CityInfo.js",["113","114","115","116","117","118"],[],"import React, { useContext } from \"react\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport { PlacesContext } from \"../context/place-context\";\r\nimport Nav from \"./Nav\";\r\nimport classes from \"./CityInfo.module.css\";\r\nimport FlexContainer from \"./ui/FlexContainer\";\r\nimport FlexItem from \"./ui/FlexItem\";\r\nimport { getCityInfo } from \"../services/city-services\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { Skeleton } from \"@mui/material\";\r\n\r\nconst CityInfo = () => {\r\n  const params = useParams();\r\n  const location = useLocation();\r\n  // const [cityInfo, setCityInfo] = useState([]);\r\n  const cityInfo = location.state;\r\n  console.log(cityInfo, \"cityInfo\");\r\n  console.log(\"location\", location);\r\n  console.log(params.city);\r\n\r\n  const placesCtx = useContext(PlacesContext);\r\n  const placeIndex = 1;\r\n  // placesCtx.favoritePlaces.findIndex(\r\n  //   (element) => element.cityName === params.city\r\n  // );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Nav></Nav>\r\n\r\n      <FlexContainer>\r\n        {cityInfo.daily.map((day, index) => {\r\n          const dateObj = new Date(day.dt * 1000);\r\n          let date = dateObj.getDate();\r\n\r\n          let numDate = \"\";\r\n          if (Number(String(date).slice(-1)) === 1) {\r\n            numDate = \"st\";\r\n          } else if (Number(String(date).slice(-1)) === 2) {\r\n            numDate = \"nd\";\r\n          } else if (Number(String(date).slice(-1)) === 3) {\r\n            numDate = \"rd\";\r\n          } else {\r\n            numDate = \"th\";\r\n          }\r\n          let weekDays = [\r\n            \"Sunday\",\r\n            \"Monday\",\r\n            \"Tuesday\",\r\n            \"Wednesday\",\r\n            \"Thursday\",\r\n            \"Friday\",\r\n            \"Saturday\",\r\n          ];\r\n          const weekDay = weekDays[dateObj.getDay()];\r\n\r\n          return (\r\n            <FlexItem key={index}>\r\n              <h2>\r\n                {index === 0\r\n                  ? \" Today\"\r\n                  : index === 1\r\n                  ? \" Tomorrow\"\r\n                  : \" \" + weekDay + \", \" + date + numDate}\r\n              </h2>\r\n              <div>\r\n                <p>{params.city}</p>\r\n\r\n                <img\r\n                  alt=\"\"\r\n                  src={`http://openweathermap.org/img/wn/${day.weather[0].icon}.png`}\r\n                ></img>\r\n\r\n                <p>\r\n                  {day.weather[0].description.charAt(0).toUpperCase() +\r\n                    day.weather[0].description.slice(1)}\r\n                </p>\r\n                <p>Daily Temperature {Math.round(day.temp.day)}°C</p>\r\n              </div>\r\n              <div className={classes.table}>\r\n                <div>\r\n                  <p>Max daily Temp.</p>\r\n                  <p>{Math.round(day.temp.max)}°C</p>\r\n                </div>\r\n                <div>\r\n                  <p>Min daily Temp.</p>\r\n                  <p>{Math.round(day.temp.min)}°C</p>\r\n                </div>\r\n                <div>\r\n                  <p>Chance of rain </p>\r\n                  <p>\r\n                    {Math.round(day.pop * 100)}%{\" \"}\r\n                    {day.pop * 100 > 50 ? \"☔\" : \"🌂\"}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n\r\n              <div className={classes.table}>\r\n                <div>\r\n                  <p>Humidity</p>\r\n                  <p>{day.humidity}%</p>\r\n                </div>\r\n                <div>\r\n                  <p>UV index</p>\r\n                  <p>\r\n                    {Math.round(day.uvi)}\r\n                    {day.uvi > 8 && \"⚠️\"}\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  <p>Wind speed</p>\r\n                  <p>{Math.round(day.wind_speed)}m/s</p>\r\n                </div>\r\n              </div>\r\n            </FlexItem>\r\n          );\r\n        })}\r\n      </FlexContainer>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CityInfo;\r\n","C:\\Users\\PC\\Desktop\\MY REACT PROJECTS\\Cool Weather App\\weather-app\\src\\components\\ui\\FlexContainer.js",[],[],"C:\\Users\\PC\\Desktop\\MY REACT PROJECTS\\Cool Weather App\\weather-app\\src\\components\\ui\\FlexItem.js",[],[],"C:\\Users\\PC\\Desktop\\MY REACT PROJECTS\\Cool Weather App\\weather-app\\src\\components\\ui\\CityGuardWrapper.js",[],[],"C:\\Users\\PC\\Desktop\\MY REACT PROJECTS\\Cool Weather App\\weather-app\\src\\components\\CityInfoHourly.js",["119"],[],"import React, { useContext } from \"react\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport { PlacesContext } from \"../context/place-context\";\r\nimport classes from \"./CityInfoHourly.module.css\";\r\nimport Nav from \"./Nav\";\r\n\r\nconst CityInfoHourly = () => {\r\n  const params = useParams();\r\n  const location = useLocation();\r\n  const placesCtx = useContext(PlacesContext);\r\n\r\n  // const placeIndex = placesCtx.favoritePlaces.findIndex(\r\n  //   (element) => element.cityName === params.city\r\n  // );\r\n\r\n  const cityInfo = location.state;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Nav></Nav>\r\n\r\n      <div className={classes.container}>\r\n        {cityInfo.hourly.map((hour, index) => {\r\n          const timeObj = new Date(hour.dt * 1000);\r\n          const time = timeObj.getHours();\r\n          const date = timeObj.getDate();\r\n          let weekDays = [\r\n            \"Sunday\",\r\n            \"Monday\",\r\n            \"Tuesday\",\r\n            \"Wednesday\",\r\n            \"Thursday\",\r\n            \"Friday\",\r\n            \"Saturday\",\r\n          ];\r\n          const weekDay = weekDays[timeObj.getDay()];\r\n\r\n          let numDate = \"\";\r\n          if (Number(String(date).slice(-1)) === 1) {\r\n            numDate = \"st\";\r\n          } else if (Number(String(date).slice(-1)) === 2) {\r\n            numDate = \"nd\";\r\n          } else if (Number(String(date).slice(-1)) === 3) {\r\n            numDate = \"rd\";\r\n          } else {\r\n            numDate = \"th\";\r\n          }\r\n          const windDegrees = hour.wind_deg;\r\n\r\n          const windDirections = [\r\n            \"N\",\r\n            \"NNE\",\r\n            \"NE\",\r\n            \"ENE\",\r\n            \"E\",\r\n            \"ESE\",\r\n            \"SE\",\r\n            \"SSE\",\r\n            \"S\",\r\n            \"SSW\",\r\n            \"SW\",\r\n            \"WSW\",\r\n            \"W\",\r\n            \"WNW\",\r\n            \"NW\",\r\n            \"NNW\",\r\n            \"N\",\r\n          ];\r\n\r\n          const windDirection = windDirections[Math.round(windDegrees / 22.5)];\r\n\r\n          return (\r\n            <React.Fragment key={index}>\r\n              {index === 0 && (\r\n                <h2>\r\n                  {params.city + \",  \"}\r\n                  <br></br>\r\n                  {weekDay} {date}\r\n                  {numDate}\r\n                </h2>\r\n              )}\r\n              {time === 0 && (\r\n                <h2>\r\n                  {params.city + \",  \"}\r\n                  <br></br>\r\n                  {weekDay} {date}\r\n                  {numDate}\r\n                </h2>\r\n              )}\r\n              <details>\r\n                <summary>\r\n                  <div className={classes.flexContainer}>\r\n                    <div className={classes.flexItem}>\r\n                      <p>{time}h</p>\r\n                      <p>{Math.round(hour.temp)}°C</p>\r\n                      <div className={classes.subFlexItem}>\r\n                        <img\r\n                          id=\"img\"\r\n                          alt=\"weather-icon\"\r\n                          src={`http://openweathermap.org/img/wn/${hour.weather[0].icon}.png`}\r\n                        ></img>\r\n                        <p>\r\n                          {hour.weather[0].description.length > 9\r\n                            ? hour.weather[0].main.charAt(0).toUpperCase() +\r\n                              hour.weather[0].main.slice(1)\r\n                            : hour.weather[0].description\r\n                                .charAt(0)\r\n                                .toUpperCase() +\r\n                              hour.weather[0].description.slice(1)}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    <div className={classes.flexItem}>\r\n                      <div className={classes.subFlexItem}>\r\n                        <svg viewBox=\"0 -2 5 10\">\r\n                          <title>Rain</title>\r\n                          <path d=\"M4.7329.0217c-.1848-.059-.3855.0064-.4803.148L.2731 5.1191c-.0814.0922-.1501.1961-.196.3108-.2469.6009.1185 1.2697.8156 1.4943.6914.226 1.447-.0712 1.7-.6585L4.9662.4987l.0111-.0282c.073-.1807-.036-.379-.2444-.4488z\"></path>\r\n                        </svg>\r\n                        <p>{Math.round(hour.pop * 100)}%</p>\r\n                      </div>\r\n\r\n                      <div className={classes.subFlexItem}>\r\n                        <svg name=\"wind\" viewBox=\"0 0 24 24\">\r\n                          <title>Wind</title>\r\n                          <path\r\n                            d=\"M6 8.67h5.354c1.457 0 2.234-1.158 2.234-2.222S12.687 4.4 11.354 4.4c-.564 0-1.023.208-1.366.488M3 11.67h15.54c1.457 0 2.235-1.158 2.235-2.222S19.873 7.4 18.54 7.4c-.747 0-1.311.365-1.663.78M6 15.4h9.389c1.457 0 2.234 1.159 2.234 2.223 0 1.064-.901 2.048-2.234 2.048a2.153 2.153 0 0 1-1.63-.742\"\r\n                            strokeWidth=\"2\"\r\n                            stroke=\"currentColor\"\r\n                            strokeLinecap=\"round\"\r\n                            fill=\"none\"\r\n                          ></path>\r\n                        </svg>\r\n\r\n                        <p>\r\n                          {windDirection + \"  \"}\r\n                          {+(hour.wind_speed * 3.6).toFixed(2)}km/h\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </summary>\r\n                <div className={classes.moreInfo}>\r\n                  <ul className={classes.ul}>\r\n                    <li>\r\n                      <svg viewBox=\"0 0 24 24\">\r\n                        <title>Feels like</title>\r\n                        <path d=\"M9.94 15.406v.323c.974.358 1.671 1.325 1.671 2.461 0 1.441-1.122 2.61-2.505 2.61-1.384 0-2.506-1.169-2.506-2.61 0-1.136.697-2.103 1.67-2.461v-.323a2.088 2.088 0 0 1-1.252-1.914V5.488a2.088 2.088 0 1 1 4.176 0v8.004c0 .856-.516 1.592-1.253 1.914zM9.15 4.9a.75.75 0 0 0-.75.75v5.33h1.5V5.65a.75.75 0 0 0-.75-.75zM15.4 8a2.8 2.8 0 1 1 0-5.6 2.8 2.8 0 0 1 0 5.6zm0-1.8a1 1 0 1 0 0-2 1 1 0 0 0 0 2z\"></path>\r\n                      </svg>\r\n                      <div className={classes.spanContainer}>\r\n                        <span>Feels like </span>\r\n\r\n                        <span>{Math.round(hour.feels_like)}°C</span>\r\n                      </div>\r\n                    </li>\r\n                    <li>\r\n                      <svg viewBox=\"0 0 24 24\">\r\n                        <title>Wind</title>\r\n                        <path\r\n                          d=\"M6 8.67h5.354c1.457 0 2.234-1.158 2.234-2.222S12.687 4.4 11.354 4.4c-.564 0-1.023.208-1.366.488M3 11.67h15.54c1.457 0 2.235-1.158 2.235-2.222S19.873 7.4 18.54 7.4c-.747 0-1.311.365-1.663.78M6 15.4h9.389c1.457 0 2.234 1.159 2.234 2.223 0 1.064-.901 2.048-2.234 2.048a2.153 2.153 0 0 1-1.63-.742\"\r\n                          strokeWidth=\"2\"\r\n                          stroke=\"currentColor\"\r\n                          strokeLinecap=\"round\"\r\n                          fill=\"none\"\r\n                        ></path>\r\n                      </svg>\r\n                      <div className={classes.spanContainer}>\r\n                        <span>Wind </span>\r\n\r\n                        <span>\r\n                          {windDirection + \"  \"}\r\n                          {Math.round(+(hour.wind_speed * 3.6))}km/h\r\n                        </span>\r\n                      </div>\r\n                    </li>\r\n                    <li>\r\n                      <svg name=\"humidity\" role=\"img\" viewBox=\"0 0 24 24\">\r\n                        <title>Humidity</title>\r\n                        <path\r\n                          fillRule=\"evenodd\"\r\n                          d=\"M11.743 17.912a4.182 4.182 0 0 1-2.928-1.182 3.972 3.972 0 0 1-.614-4.962.743.743 0 0 1 .646-.349c.234 0 .476.095.66.275l4.467 4.355c.385.376.39.998-.076 1.275a4.216 4.216 0 0 1-2.155.588M11.855 4c.316 0 .61.14.828.395.171.2.36.416.562.647 1.857 2.126 4.965 5.684 4.965 8.73 0 3.416-2.85 6.195-6.353 6.195-3.505 0-6.357-2.78-6.357-6.195 0-3.082 2.921-6.406 4.854-8.605.242-.275.47-.535.673-.772A1.08 1.08 0 0 1 11.855 4\"\r\n                        ></path>\r\n                      </svg>\r\n                      <div className={classes.spanContainer}>\r\n                        <span>Humidity </span>\r\n                        <span>{hour.humidity}%</span>\r\n                      </div>\r\n                    </li>\r\n                    <li>\r\n                      <svg name=\"uv\" viewBox=\"0 0 24 24\">\r\n                        <title>UV Level</title>\r\n                        <path d=\"M7.4 5.598a.784.784 0 0 1 .25-.92c.335-.256.824-.197 1.02.062.066.063.066.063.08.085l2.406 3.152-.626.238a3.983 3.983 0 0 0-1.097.633l-.522.424L7.4 5.598zm4.539 2.358c-.21 0-.418.017-.625.05l-.664.106.09-.666.438-3.266c.013-.072.013-.072.012-.057a.783.783 0 0 1 .666-.616.78.78 0 0 1 .872.639l.006.038.507 3.933-.662-.108a3.957 3.957 0 0 0-.64-.053zm-7.781 3.19l.026-.004 3.934-.507-.108.662a3.98 3.98 0 0 0-.003 1.266l.105.664-.665-.09-3.265-.439a.784.784 0 0 1-.676-.679c-.054-.42.238-.809.63-.869l.022-.004zm11.504-.617a3.98 3.98 0 0 0-.632-1.097l-.425-.522.623-.256 3.056-1.256a.787.787 0 0 1 .916.253c.256.337.199.817-.104 1.063l-.045.037-3.151 2.405-.238-.627zm-1.205-1.672a3.984 3.984 0 0 0-1.095-.637l-.626-.24.41-.532 2.008-2.602c.059-.07.059-.07.046-.052a.78.78 0 0 1 1.306.227c.076.185.079.39.02.54l-.021.06-1.528 3.662-.52-.426zM4.595 7.793c.162-.387.611-.58.971-.441.017.004.017.004.055.02L9.283 8.9l-.425.52a3.985 3.985 0 0 0-.636 1.094l-.24.627-3.144-2.425a.784.784 0 0 1-.243-.924zm14.443 7.367c.054.045.054.045.044.04a.784.784 0 0 1 .199.884c-.163.386-.61.58-.964.443-.024-.006-.024-.006-.062-.022l-3.662-1.529.426-.52a3.98 3.98 0 0 0 .636-1.094l.241-.626 3.142 2.424zm1.332-3.303c.053.422-.239.809-.63.87l-.035.006-3.945.508.108-.662a3.999 3.999 0 0 0 .003-1.266l-.105-.663.665.09 3.272.44c.068.012.068.012.052.01a.784.784 0 0 1 .615.667zm-3.894 6.421c.024.068.024.068.017.053a.786.786 0 0 1-.27.87c-.332.25-.816.194-1.047-.091-.022-.023-.022-.023-.05-.058l-2.406-3.154.626-.237a3.977 3.977 0 0 0 1.097-.632l.523-.425 1.51 3.674zm-8.26-4.932c.151.397.365.767.633 1.097l.424.522-.622.256-3.054 1.255a.787.787 0 0 1-.92-.25.781.781 0 0 1-.154-.58c.027-.199.127-.379.227-.452.045-.046.045-.046.075-.069l3.153-2.406.238.627zm3.723 2.572c.209 0 .417-.016.625-.049l.662-.103-.089.664-.438 3.26-.012.062a.785.785 0 0 1-.666.618c-.048.005-.048.005-.101.006-.386 0-.714-.28-.764-.612-.01-.043-.01-.043-.014-.072l-.507-3.934.662.108c.213.035.427.052.642.052zM7.366 18.27l.006-.015L8.9 14.592l.52.426a3.99 3.99 0 0 0 1.094.636l.626.241-.41.531-2.012 2.609-.04.046a.788.788 0 0 1-.886.2.787.787 0 0 1-.428-1.011z\"></path>\r\n                        <path d=\"M11.911 14.322a2.411 2.411 0 1 0 0-4.822 2.411 2.411 0 0 0 0 4.822zm0 2a4.411 4.411 0 1 1 0-8.822 4.411 4.411 0 0 1 0 8.822z\"></path>\r\n                      </svg>\r\n                      <div className={classes.spanContainer}>\r\n                        <span>UV index </span>\r\n\r\n                        <span>{Math.round(hour.uvi)} of 10</span>\r\n                      </div>\r\n                    </li>\r\n                    <li>\r\n                      <svg name=\"cloud\" viewBox=\"0 0 24 24\">\r\n                        <title>Cloud</title>\r\n                        <path d=\"M21.786 11.898a3.322 3.322 0 0 0-4.04-2.357l-.356.095a4.911 4.911 0 0 0-9.599.546l-.129-.034a2.804 2.804 0 0 0-3.486 3.032l-1.203.323a1.312 1.312 0 0 0 .42 2.576h15.103s.626-.029.94-.113a3.322 3.322 0 0 0 2.35-4.068\"></path>\r\n                      </svg>\r\n                      <div className={classes.spanContainer}>\r\n                        <span>Cloud cover </span>\r\n\r\n                        <span> {hour.clouds}%</span>\r\n                      </div>\r\n                    </li>\r\n                    <li>\r\n                      <svg viewBox=\"0 -2 5 10\">\r\n                        <title>Rain</title>\r\n                        <path d=\"M4.7329.0217c-.1848-.059-.3855.0064-.4803.148L.2731 5.1191c-.0814.0922-.1501.1961-.196.3108-.2469.6009.1185 1.2697.8156 1.4943.6914.226 1.447-.0712 1.7-.6585L4.9662.4987l.0111-.0282c.073-.1807-.036-.379-.2444-.4488z\"></path>\r\n                      </svg>\r\n                      <div className={classes.spanContainer}>\r\n                        <span>Chance of rain </span>\r\n\r\n                        <span>{Math.round(hour.pop * 100)}%</span>\r\n                      </div>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </details>\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CityInfoHourly;\r\n","C:\\Users\\PC\\Desktop\\MY REACT PROJECTS\\Cool Weather App\\weather-app\\src\\components\\Nav.js",[],[],"C:\\Users\\PC\\Desktop\\MY REACT PROJECTS\\Cool Weather App\\weather-app\\src\\components\\ui\\LoadingSpinner.js",[],[],"C:\\Users\\PC\\Desktop\\MY REACT PROJECTS\\Cool Weather App\\weather-app\\src\\context\\longCities.js",[],[],[],"C:\\Users\\PC\\Desktop\\MY REACT PROJECTS\\Cool Weather App\\weather-app\\src\\services\\city-services.js",[],[],"C:\\Users\\PC\\Desktop\\MY REACT PROJECTS\\Cool Weather App\\weather-app\\src\\components\\CityItem.js",["120"],[],"import FlexItem from \"./ui/FlexItem\";\r\nimport React from \"react\";\r\nimport { removeCity } from \"../services/city-services\";\r\nimport classes from \"./CitiesList.module.css\";\r\nimport { useState } from \"react\";\r\nimport LoadingSpinner from \"./ui/LoadingSpinner\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Skeleton } from \"@mui/material\";\r\n\r\nconst CityItem = ({ city, index, onRemove, onRefresh }) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const dateObj = new Date(city?.current?.dt * 1000);\r\n  const date = dateObj.getDate();\r\n  const hour = dateObj.getHours();\r\n  const minutes = String(dateObj.getMinutes()).padStart(2, \"0\");\r\n\r\n  let weekDays = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ];\r\n  const weekDaysShort = [\r\n    \"Sun\",\r\n    \"Mon\",\r\n    \"Tue\",\r\n    \"Wed\",\r\n    \"Thu\",\r\n    \"Fri\",\r\n    \"Sat\",\r\n    \"Sun\",\r\n    \"Mon\",\r\n    \"Tue\",\r\n  ];\r\n  const weekDay = weekDays[dateObj.getDay()];\r\n  const day2 = weekDaysShort[dateObj.getDay() + 1];\r\n  const day3 = weekDaysShort[dateObj.getDay() + 2];\r\n  const day4 = weekDaysShort[dateObj.getDay() + 3];\r\n\r\n  const imageUrl = `http://openweathermap.org/img/wn/${city.current.weather[0].icon}.png`;\r\n  const img2 = `http://openweathermap.org/img/wn/${city.daily[1].weather[0].icon}.png`;\r\n  const img3 = `http://openweathermap.org/img/wn/${city.daily[2].weather[0].icon}.png`;\r\n  const img4 = `http://openweathermap.org/img/wn/${city.daily[3].weather[0].icon}.png`;\r\n\r\n  const moreInfoHandler = () => {\r\n    console.log(city.cityName);\r\n    navigate(`/${city.cityName}`, {\r\n      state: city,\r\n    });\r\n  };\r\n  const removeCityHandler = (cityName) => {\r\n    onRemove(removeCity(cityName));\r\n  };\r\n  const refreshWeatherData = async (cityName, index) => {\r\n    setIsLoading(true);\r\n    await onRefresh(cityName, index);\r\n\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return (\r\n    <FlexItem key={index}>\r\n      {isLoading && <LoadingSpinner />}\r\n      {!isLoading && (\r\n        <React.Fragment>\r\n          <span\r\n            onClick={() => {\r\n              removeCityHandler(city.cityName);\r\n            }}\r\n            className={classes.removeButton}\r\n          >\r\n            ✕\r\n          </span>\r\n          <span\r\n            onClick={() => {\r\n              refreshWeatherData(city.cityName, index);\r\n            }}\r\n            className={classes.refreshButton}\r\n          >\r\n            ↺\r\n          </span>\r\n          <div onClick={moreInfoHandler}>\r\n            <h2>\r\n              {city.cityName.length > 13\r\n                ? city.cityName.substring(0, 12) + \".\"\r\n                : city.cityName + \",\"}\r\n              <span>{city.cityCode} </span>\r\n            </h2>\r\n\r\n            <p>\r\n              {weekDay},<span> {date}</span>\r\n            </p>\r\n            <p>\r\n              {hour}: {minutes}\r\n            </p>\r\n\r\n            <img alt=\"\" src={imageUrl}></img>\r\n\r\n            <p>\r\n              {city.current.weather[0].description.charAt(0).toUpperCase() +\r\n                city.current.weather[0].description.slice(1)}\r\n            </p>\r\n            <p>{Math.round(city.current.temp)}°C</p>\r\n\r\n            <div className={classes.table}>\r\n              <div>\r\n                <img alt=\"\" src={img2}></img>\r\n                <p>{day2}</p>\r\n              </div>\r\n              <div>\r\n                <img alt=\"\" src={img3}></img>\r\n                <p>{day3}</p>\r\n              </div>\r\n              <div>\r\n                <img alt=\"\" src={img4}></img>\r\n                <p>{day4}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n      )}\r\n    </FlexItem>\r\n  );\r\n};\r\n\r\nexport default CityItem;\r\n",{"ruleId":"121","severity":1,"message":"122","line":1,"column":37,"nodeType":"123","messageId":"124","endLine":1,"endColumn":47},{"ruleId":"121","severity":1,"message":"125","line":5,"column":10,"nodeType":"123","messageId":"124","endLine":5,"endColumn":23},{"ruleId":"121","severity":1,"message":"126","line":12,"column":3,"nodeType":"123","messageId":"124","endLine":12,"endColumn":7},{"ruleId":"121","severity":1,"message":"127","line":13,"column":3,"nodeType":"123","messageId":"124","endLine":13,"endColumn":11},{"ruleId":"121","severity":1,"message":"128","line":16,"column":3,"nodeType":"123","messageId":"124","endLine":16,"endColumn":7},{"ruleId":"121","severity":1,"message":"129","line":45,"column":9,"nodeType":"123","messageId":"124","endLine":45,"endColumn":20},{"ruleId":"121","severity":1,"message":"130","line":1,"column":8,"nodeType":"123","messageId":"124","endLine":1,"endColumn":15},{"ruleId":"121","severity":1,"message":"131","line":7,"column":8,"nodeType":"123","messageId":"124","endLine":7,"endColumn":16},{"ruleId":"121","severity":1,"message":"132","line":8,"column":10,"nodeType":"123","messageId":"124","endLine":8,"endColumn":19},{"ruleId":"121","severity":1,"message":"133","line":9,"column":10,"nodeType":"123","messageId":"124","endLine":9,"endColumn":18},{"ruleId":"121","severity":1,"message":"134","line":10,"column":10,"nodeType":"123","messageId":"124","endLine":10,"endColumn":21},{"ruleId":"121","severity":1,"message":"135","line":10,"column":23,"nodeType":"123","messageId":"124","endLine":10,"endColumn":33},{"ruleId":"121","severity":1,"message":"136","line":14,"column":9,"nodeType":"123","messageId":"124","endLine":14,"endColumn":18},{"ruleId":"121","severity":1,"message":"137","line":15,"column":9,"nodeType":"123","messageId":"124","endLine":15,"endColumn":17},{"ruleId":"121","severity":1,"message":"132","line":1,"column":29,"nodeType":"123","messageId":"124","endLine":1,"endColumn":38},{"ruleId":"121","severity":1,"message":"138","line":1,"column":40,"nodeType":"123","messageId":"124","endLine":1,"endColumn":46},{"ruleId":"121","severity":1,"message":"136","line":75,"column":9,"nodeType":"123","messageId":"124","endLine":75,"endColumn":18},{"ruleId":"121","severity":1,"message":"139","line":8,"column":10,"nodeType":"123","messageId":"124","endLine":8,"endColumn":21},{"ruleId":"121","severity":1,"message":"133","line":9,"column":10,"nodeType":"123","messageId":"124","endLine":9,"endColumn":18},{"ruleId":"121","severity":1,"message":"132","line":10,"column":10,"nodeType":"123","messageId":"124","endLine":10,"endColumn":19},{"ruleId":"121","severity":1,"message":"127","line":11,"column":10,"nodeType":"123","messageId":"124","endLine":11,"endColumn":18},{"ruleId":"121","severity":1,"message":"136","line":22,"column":9,"nodeType":"123","messageId":"124","endLine":22,"endColumn":18},{"ruleId":"121","severity":1,"message":"140","line":23,"column":9,"nodeType":"123","messageId":"124","endLine":23,"endColumn":19},{"ruleId":"121","severity":1,"message":"136","line":10,"column":9,"nodeType":"123","messageId":"124","endLine":10,"endColumn":18},{"ruleId":"121","severity":1,"message":"127","line":8,"column":10,"nodeType":"123","messageId":"124","endLine":8,"endColumn":18},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'PlacesContext' is defined but never used.","'Fade' is defined but never used.","'Skeleton' is defined but never used.","'Zoom' is defined but never used.","'handleClick' is assigned a value but never used.","'classes' is defined but never used.","'FlexItem' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'refreshCity' is defined but never used.","'removeCity' is defined but never used.","'placesCtx' is assigned a value but never used.","'navigate' is assigned a value but never used.","'useRef' is defined but never used.","'getCityInfo' is defined but never used.","'placeIndex' is assigned a value but never used."]